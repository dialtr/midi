

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jan 16 08:57:59 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19  0000                     
    20                           ; Version 1.45
    21                           ; Generated 16/11/2017 GMT
    22                           ; 
    23                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4620 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     
    55                           	psect	mediumconst
    56  00FEFE                     __pmediumconst:
    57                           	opt stack 0
    58  00FEFE  00                 	db	0
    59  00FEFF                     _MIDI_NOTE_FREQUENCY_TABLE:
    60                           	opt stack 0
    61  00FEFF  0008               	dw	8
    62  00FF01  0009               	dw	9
    63  00FF03  0009               	dw	9
    64  00FF05  000A               	dw	10
    65  00FF07  000A               	dw	10
    66  00FF09  000B               	dw	11
    67  00FF0B  000C               	dw	12
    68  00FF0D  000C               	dw	12
    69  00FF0F  000D               	dw	13
    70  00FF11  000E               	dw	14
    71  00FF13  000F               	dw	15
    72  00FF15  000F               	dw	15
    73  00FF17  0010               	dw	16
    74  00FF19  0011               	dw	17
    75  00FF1B  0012               	dw	18
    76  00FF1D  0013               	dw	19
    77  00FF1F  0015               	dw	21
    78  00FF21  0016               	dw	22
    79  00FF23  0017               	dw	23
    80  00FF25  0018               	dw	24
    81  00FF27  001A               	dw	26
    82  00FF29  001C               	dw	28
    83  00FF2B  001D               	dw	29
    84  00FF2D  001F               	dw	31
    85  00FF2F  0021               	dw	33
    86  00FF31  0023               	dw	35
    87  00FF33  0025               	dw	37
    88  00FF35  0027               	dw	39
    89  00FF37  0029               	dw	41
    90  00FF39  002C               	dw	44
    91  00FF3B  002E               	dw	46
    92  00FF3D  0031               	dw	49
    93  00FF3F  0034               	dw	52
    94  00FF41  0037               	dw	55
    95  00FF43  003A               	dw	58
    96  00FF45  003E               	dw	62
    97  00FF47  0041               	dw	65
    98  00FF49  0045               	dw	69
    99  00FF4B  0049               	dw	73
   100  00FF4D  004E               	dw	78
   101  00FF4F  0052               	dw	82
   102  00FF51  0057               	dw	87
   103  00FF53  005C               	dw	92
   104  00FF55  0062               	dw	98
   105  00FF57  0068               	dw	104
   106  00FF59  006E               	dw	110
   107  00FF5B  0075               	dw	117
   108  00FF5D  007B               	dw	123
   109  00FF5F  0083               	dw	131
   110  00FF61  008B               	dw	139
   111  00FF63  0093               	dw	147
   112  00FF65  009C               	dw	156
   113  00FF67  00A5               	dw	165
   114  00FF69  00AF               	dw	175
   115  00FF6B  00B9               	dw	185
   116  00FF6D  00C4               	dw	196
   117  00FF6F  00D0               	dw	208
   118  00FF71  00DC               	dw	220
   119  00FF73  00E9               	dw	233
   120  00FF75  00F7               	dw	247
   121  00FF77  0106               	dw	262
   122  00FF79  0115               	dw	277
   123  00FF7B  0126               	dw	294
   124  00FF7D  0137               	dw	311
   125  00FF7F  014A               	dw	330
   126  00FF81  015D               	dw	349
   127  00FF83  0172               	dw	370
   128  00FF85  0188               	dw	392
   129  00FF87  019F               	dw	415
   130  00FF89  01B8               	dw	440
   131  00FF8B  01D2               	dw	466
   132  00FF8D  01EE               	dw	494
   133  00FF8F  020B               	dw	523
   134  00FF91  022A               	dw	554
   135  00FF93  024B               	dw	587
   136  00FF95  026E               	dw	622
   137  00FF97  0293               	dw	659
   138  00FF99  02BA               	dw	698
   139  00FF9B  02E4               	dw	740
   140  00FF9D  0310               	dw	784
   141  00FF9F  033F               	dw	831
   142  00FFA1  0370               	dw	880
   143  00FFA3  03A4               	dw	932
   144  00FFA5  03DC               	dw	988
   145  00FFA7  0417               	dw	1047
   146  00FFA9  0455               	dw	1109
   147  00FFAB  0497               	dw	1175
   148  00FFAD  04DD               	dw	1245
   149  00FFAF  0527               	dw	1319
   150  00FFB1  0575               	dw	1397
   151  00FFB3  05C8               	dw	1480
   152  00FFB5  0620               	dw	1568
   153  00FFB7  067D               	dw	1661
   154  00FFB9  06E0               	dw	1760
   155  00FFBB  0749               	dw	1865
   156  00FFBD  07B8               	dw	1976
   157  00FFBF  082D               	dw	2093
   158  00FFC1  08A9               	dw	2217
   159  00FFC3  092D               	dw	2349
   160  00FFC5  09B9               	dw	2489
   161  00FFC7  0A4D               	dw	2637
   162  00FFC9  0AEA               	dw	2794
   163  00FFCB  0B90               	dw	2960
   164  00FFCD  0C40               	dw	3136
   165  00FFCF  0CFA               	dw	3322
   166  00FFD1  0DC0               	dw	3520
   167  00FFD3  0E91               	dw	3729
   168  00FFD5  0F6F               	dw	3951
   169  00FFD7  105A               	dw	4186
   170  00FFD9  1153               	dw	4435
   171  00FFDB  125B               	dw	4699
   172  00FFDD  1372               	dw	4978
   173  00FFDF  149A               	dw	5274
   174  00FFE1  15D4               	dw	5588
   175  00FFE3  1720               	dw	5920
   176  00FFE5  1880               	dw	6272
   177  00FFE7  19F5               	dw	6645
   178  00FFE9  1B80               	dw	7040
   179  00FFEB  1D23               	dw	7459
   180  00FFED  1EDE               	dw	7902
   181  00FFEF  20B4               	dw	8372
   182  00FFF1  22A6               	dw	8870
   183  00FFF3  24B5               	dw	9397
   184  00FFF5  26E4               	dw	9956
   185  00FFF7  2934               	dw	10548
   186  00FFF9  2BA7               	dw	11175
   187  00FFFB  2E40               	dw	11840
   188  00FFFD  3100               	dw	12544
   189  00FFFF                     __end_of_MIDI_NOTE_FREQUENCY_TABLE:
   190                           	opt stack 0
   191  0000                     _PORTB	set	3969
   192  0000                     _TRISB	set	3987
   193  0000                     _PORTDbits	set	3971
   194  0000                     _PORTD	set	3971
   195  0000                     _TRISD	set	3989
   196  0000                     _RCREG	set	4014
   197  0000                     _SPBRG	set	4015
   198  0000                     _RCIF	set	31989
   199  0000                     _TXEN	set	32101
   200  0000                     _CREN	set	32092
   201  0000                     _TRISC6	set	31910
   202  0000                     _TRISC7	set	31911
   203  0000                     _SPEN	set	32095
   204  0000                     _SYNC	set	32100
   205  0000                     _BRGH	set	32098
   206                           
   207                           ; #config settings
   208  00FFFF  00                 	db	0	; dummy byte at the end
   209  0000                     
   210                           	psect	cinit
   211  00FC6A                     __pcinit:
   212                           	opt stack 0
   213  00FC6A                     start_initialization:
   214                           	opt stack 0
   215  00FC6A                     __initialization:
   216                           	opt stack 0
   217  00FC6A                     end_of_initialization:
   218                           	opt stack 0
   219  00FC6A                     __end_of__initialization:
   220                           	opt stack 0
   221  00FC6A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   222  00FC6C  6EF8               	movwf	tblptru,c
   223  00FC6E  0100               	movlb	0
   224  00FC70  EF6B  F07E         	goto	_main	;jump to C main() function
   225                           tblptru	equ	0xFF8
   226                           
   227                           	psect	cstackCOMRAM
   228  000001                     __pcstackCOMRAM:
   229                           	opt stack 0
   230  000001                     ??_blink:
   231  000001                     ?___aldiv:
   232                           	opt stack 0
   233  000001                     ___aldiv@dividend:
   234                           	opt stack 0
   235                           
   236                           ; 4 bytes @ 0x0
   237  000001                     	ds	1
   238  000002                     loop@b:
   239                           	opt stack 0
   240                           
   241                           ; 1 bytes @ 0x1
   242  000002                     	ds	3
   243  000005                     ___aldiv@divisor:
   244                           	opt stack 0
   245                           
   246                           ; 4 bytes @ 0x4
   247  000005                     	ds	4
   248  000009                     ___aldiv@counter:
   249                           	opt stack 0
   250                           
   251                           ; 1 bytes @ 0x8
   252  000009                     	ds	1
   253  00000A                     ___aldiv@sign:
   254                           	opt stack 0
   255                           
   256                           ; 1 bytes @ 0x9
   257  00000A                     	ds	1
   258  00000B                     ___aldiv@quotient:
   259                           	opt stack 0
   260                           
   261                           ; 4 bytes @ 0xA
   262  00000B                     	ds	4
   263  00000F                     uart_init@baudrate:
   264                           	opt stack 0
   265                           
   266                           ; 4 bytes @ 0xE
   267  00000F                     	ds	4
   268  000013                     ??_uart_init:
   269                           
   270                           ; 1 bytes @ 0x12
   271  000013                     	ds	8
   272  00001B                     uart_init@x:
   273                           	opt stack 0
   274                           
   275                           ; 2 bytes @ 0x1A
   276  00001B                     	ds	2
   277  00001D                     system_init@baudrate:
   278                           	opt stack 0
   279                           
   280                           ; 4 bytes @ 0x1C
   281  00001D                     	ds	4
   282  000021                     system_init@status:
   283                           	opt stack 0
   284                           
   285                           ; 1 bytes @ 0x20
   286  000021                     	ds	1
   287  000022                     main@MIDI_BAUD_RATE:
   288                           	opt stack 0
   289                           
   290                           ; 4 bytes @ 0x21
   291  000022                     	ds	4
   292                           tblptru	equ	0xFF8
   293                           
   294 ;;
   295 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   296 ;;
   297 ;; *************** function _main *****************
   298 ;; Defined at:
   299 ;;		line 227 in file "main.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;  MIDI_BAUD_RA    4   33[COMRAM] const long 
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, status,2, status,0, cstack
   308 ;; Tracked objects:
   309 ;;		On entry : 0/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   314 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   316 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   317 ;;Total ram usage:        4 bytes
   318 ;; Hardware stack levels required when called:    3
   319 ;; This function calls:
   320 ;;		_loop
   321 ;;		_system_init
   322 ;; This function is called by:
   323 ;;		Startup code after reset
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           	psect	text0
   328  00FCD6                     __ptext0:
   329                           	opt stack 0
   330  00FCD6                     _main:
   331                           	opt stack 28
   332                           
   333                           ;main.c: 228: const long MIDI_BAUD_RATE = 31250;
   334                           
   335                           ;incstack = 0
   336  00FCD6  0E12               	movlw	18
   337  00FCD8  6E22               	movwf	main@MIDI_BAUD_RATE,c
   338  00FCDA  0E7A               	movlw	122
   339  00FCDC  6E23               	movwf	main@MIDI_BAUD_RATE+1,c
   340  00FCDE  0E00               	movlw	0
   341  00FCE0  6E24               	movwf	main@MIDI_BAUD_RATE+2,c
   342  00FCE2  0E00               	movlw	0
   343  00FCE4  6E25               	movwf	main@MIDI_BAUD_RATE+3,c
   344                           
   345                           ;main.c: 230: system_init(MIDI_BAUD_RATE);
   346  00FCE6  C022  F01D         	movff	main@MIDI_BAUD_RATE,system_init@baudrate
   347  00FCEA  C023  F01E         	movff	main@MIDI_BAUD_RATE+1,system_init@baudrate+1
   348  00FCEE  C024  F01F         	movff	main@MIDI_BAUD_RATE+2,system_init@baudrate+2
   349  00FCF2  C025  F020         	movff	main@MIDI_BAUD_RATE+3,system_init@baudrate+3
   350  00FCF6  EC57  F07E         	call	_system_init	;wreg free
   351  00FCFA                     
   352                           ;main.c: 233: loop();
   353  00FCFA  EC4A  F07E         	call	_loop	;wreg free
   354                           
   355                           ;main.c: 234: }
   356  00FCFE  D7FD               	goto	l70
   357  00FD00                     __end_of_main:
   358                           	opt stack 0
   359                           tblptru	equ	0xFF8
   360                           
   361 ;; *************** function _system_init *****************
   362 ;; Defined at:
   363 ;;		line 170 in file "main.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;  baudrate        4   28[COMRAM] long 
   366 ;; Auto vars:     Size  Location     Type
   367 ;;  status          1   32[COMRAM] unsigned char 
   368 ;; Return value:  Size  Location     Type
   369 ;;                  1    wreg      unsigned char 
   370 ;; Registers used:
   371 ;;		wreg, status,2, status,0, cstack
   372 ;; Tracked objects:
   373 ;;		On entry : 0/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   377 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   378 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   380 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   381 ;;Total ram usage:        5 bytes
   382 ;; Hardware stack levels used:    1
   383 ;; Hardware stack levels required when called:    2
   384 ;; This function calls:
   385 ;;		_port_init
   386 ;;		_uart_init
   387 ;; This function is called by:
   388 ;;		_main
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392                           	psect	text1
   393  00FCAE                     __ptext1:
   394                           	opt stack 0
   395  00FCAE                     _system_init:
   396                           	opt stack 28
   397                           
   398                           ;main.c: 171: char status = 0;
   399                           
   400                           ;incstack = 0
   401  00FCAE  0E00               	movlw	0
   402  00FCB0  6E21               	movwf	system_init@status,c
   403                           
   404                           ;main.c: 173: status = port_init();
   405  00FCB2  EC3A  F07E         	call	_port_init	;wreg free
   406  00FCB6  6E21               	movwf	system_init@status,c
   407                           
   408                           ;main.c: 174: if (!status) {
   409  00FCB8  5021               	movf	system_init@status,w,c
   410  00FCBA  B4D8               	btfsc	status,2,c
   411  00FCBC  0012               	return	
   412                           
   413                           ;main.c: 176: }
   414                           ;main.c: 178: status = uart_init(baudrate);
   415                           
   416                           ;main.c: 175: return status;
   417                           ;	Return value of _system_init is never used
   418  00FCBE  C01D  F00F         	movff	system_init@baudrate,uart_init@baudrate
   419  00FCC2  C01E  F010         	movff	system_init@baudrate+1,uart_init@baudrate+1
   420  00FCC6  C01F  F011         	movff	system_init@baudrate+2,uart_init@baudrate+2
   421  00FCCA  C020  F012         	movff	system_init@baudrate+3,uart_init@baudrate+3
   422  00FCCE  ECE6  F07E         	call	_uart_init	;wreg free
   423  00FCD2  6E21               	movwf	system_init@status,c
   424                           
   425                           ;main.c: 180: return status;
   426                           ;	Return value of _system_init is never used
   427  00FCD4  0012               	return	
   428  00FCD6                     __end_of_system_init:
   429                           	opt stack 0
   430                           tblptru	equ	0xFF8
   431                           status	equ	0xFD8
   432                           
   433 ;; *************** function _uart_init *****************
   434 ;; Defined at:
   435 ;;		line 78 in file "main.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;  baudrate        4   14[COMRAM] long 
   438 ;; Auto vars:     Size  Location     Type
   439 ;;  x               2   26[COMRAM] unsigned int 
   440 ;; Return value:  Size  Location     Type
   441 ;;                  1    wreg      unsigned char 
   442 ;; Registers used:
   443 ;;		wreg, status,2, status,0, cstack
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   449 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   450 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   451 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   452 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   453 ;;Total ram usage:       14 bytes
   454 ;; Hardware stack levels used:    1
   455 ;; Hardware stack levels required when called:    1
   456 ;; This function calls:
   457 ;;		___aldiv
   458 ;; This function is called by:
   459 ;;		_system_init
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           
   463                           	psect	text2
   464  00FDCC                     __ptext2:
   465                           	opt stack 0
   466  00FDCC                     _uart_init:
   467                           	opt stack 28
   468                           
   469                           ;main.c: 79: unsigned int x;
   470                           ;main.c: 80: x = (8000000 - (baudrate * 64)) / (baudrate * 64);
   471                           
   472                           ;incstack = 0
   473  00FDCC  C00F  F013         	movff	uart_init@baudrate,??_uart_init
   474  00FDD0  C010  F014         	movff	uart_init@baudrate+1,??_uart_init+1
   475  00FDD4  C011  F015         	movff	uart_init@baudrate+2,??_uart_init+2
   476  00FDD8  C012  F016         	movff	uart_init@baudrate+3,??_uart_init+3
   477  00FDDC  0E06               	movlw	6
   478  00FDDE                     u225:
   479  00FDDE  90D8               	bcf	status,0,c
   480  00FDE0  3613               	rlcf	??_uart_init,f,c
   481  00FDE2  3614               	rlcf	??_uart_init+1,f,c
   482  00FDE4  3615               	rlcf	??_uart_init+2,f,c
   483  00FDE6  3616               	rlcf	??_uart_init+3,f,c
   484  00FDE8  2EE8               	decfsz	wreg,f,c
   485  00FDEA  D7F9               	goto	u225
   486  00FDEC  1E13               	comf	??_uart_init,f,c
   487  00FDEE  1E14               	comf	??_uart_init+1,f,c
   488  00FDF0  1E15               	comf	??_uart_init+2,f,c
   489  00FDF2  1E16               	comf	??_uart_init+3,f,c
   490  00FDF4  2A13               	incf	??_uart_init,f,c
   491  00FDF6  0E00               	movlw	0
   492  00FDF8  2214               	addwfc	??_uart_init+1,f,c
   493  00FDFA  2215               	addwfc	??_uart_init+2,f,c
   494  00FDFC  2216               	addwfc	??_uart_init+3,f,c
   495  00FDFE  0E00               	movlw	0
   496  00FE00  2413               	addwf	??_uart_init,w,c
   497  00FE02  6E01               	movwf	___aldiv@dividend,c
   498  00FE04  0E12               	movlw	18
   499  00FE06  2014               	addwfc	??_uart_init+1,w,c
   500  00FE08  6E02               	movwf	___aldiv@dividend+1,c
   501  00FE0A  0E7A               	movlw	122
   502  00FE0C  2015               	addwfc	??_uart_init+2,w,c
   503  00FE0E  6E03               	movwf	___aldiv@dividend+2,c
   504  00FE10  0E00               	movlw	0
   505  00FE12  2016               	addwfc	??_uart_init+3,w,c
   506  00FE14  6E04               	movwf	___aldiv@dividend+3,c
   507  00FE16  C00F  F017         	movff	uart_init@baudrate,??_uart_init+4
   508  00FE1A  C010  F018         	movff	uart_init@baudrate+1,??_uart_init+5
   509  00FE1E  C011  F019         	movff	uart_init@baudrate+2,??_uart_init+6
   510  00FE22  C012  F01A         	movff	uart_init@baudrate+3,??_uart_init+7
   511  00FE26  0E06               	movlw	6
   512  00FE28                     u235:
   513  00FE28  90D8               	bcf	status,0,c
   514  00FE2A  3617               	rlcf	??_uart_init+4,f,c
   515  00FE2C  3618               	rlcf	??_uart_init+5,f,c
   516  00FE2E  3619               	rlcf	??_uart_init+6,f,c
   517  00FE30  361A               	rlcf	??_uart_init+7,f,c
   518  00FE32  2EE8               	decfsz	wreg,f,c
   519  00FE34  D7F9               	goto	u235
   520  00FE36  C017  F005         	movff	??_uart_init+4,___aldiv@divisor
   521  00FE3A  C018  F006         	movff	??_uart_init+5,___aldiv@divisor+1
   522  00FE3E  C019  F007         	movff	??_uart_init+6,___aldiv@divisor+2
   523  00FE42  C01A  F008         	movff	??_uart_init+7,___aldiv@divisor+3
   524  00FE46  EC80  F07E         	call	___aldiv	;wreg free
   525  00FE4A  C001  F01B         	movff	?___aldiv,uart_init@x
   526  00FE4E  C002  F01C         	movff	?___aldiv+1,uart_init@x+1
   527                           
   528                           ;main.c: 81: if (x > 255) {
   529  00FE52  041C               	decf	uart_init@x+1,w,c
   530  00FE54  A0D8               	btfss	status,0,c
   531  00FE56  D044               	goto	l31
   532                           
   533                           ;main.c: 82: x = (8000000 - (baudrate * 16)) / (baudrate * 16);
   534  00FE58  C00F  F013         	movff	uart_init@baudrate,??_uart_init
   535  00FE5C  C010  F014         	movff	uart_init@baudrate+1,??_uart_init+1
   536  00FE60  C011  F015         	movff	uart_init@baudrate+2,??_uart_init+2
   537  00FE64  C012  F016         	movff	uart_init@baudrate+3,??_uart_init+3
   538  00FE68  0E04               	movlw	4
   539  00FE6A                     u255:
   540  00FE6A  90D8               	bcf	status,0,c
   541  00FE6C  3613               	rlcf	??_uart_init,f,c
   542  00FE6E  3614               	rlcf	??_uart_init+1,f,c
   543  00FE70  3615               	rlcf	??_uart_init+2,f,c
   544  00FE72  3616               	rlcf	??_uart_init+3,f,c
   545  00FE74  2EE8               	decfsz	wreg,f,c
   546  00FE76  D7F9               	goto	u255
   547  00FE78  1E13               	comf	??_uart_init,f,c
   548  00FE7A  1E14               	comf	??_uart_init+1,f,c
   549  00FE7C  1E15               	comf	??_uart_init+2,f,c
   550  00FE7E  1E16               	comf	??_uart_init+3,f,c
   551  00FE80  2A13               	incf	??_uart_init,f,c
   552  00FE82  0E00               	movlw	0
   553  00FE84  2214               	addwfc	??_uart_init+1,f,c
   554  00FE86  2215               	addwfc	??_uart_init+2,f,c
   555  00FE88  2216               	addwfc	??_uart_init+3,f,c
   556  00FE8A  0E00               	movlw	0
   557  00FE8C  2413               	addwf	??_uart_init,w,c
   558  00FE8E  6E01               	movwf	___aldiv@dividend,c
   559  00FE90  0E12               	movlw	18
   560  00FE92  2014               	addwfc	??_uart_init+1,w,c
   561  00FE94  6E02               	movwf	___aldiv@dividend+1,c
   562  00FE96  0E7A               	movlw	122
   563  00FE98  2015               	addwfc	??_uart_init+2,w,c
   564  00FE9A  6E03               	movwf	___aldiv@dividend+2,c
   565  00FE9C  0E00               	movlw	0
   566  00FE9E  2016               	addwfc	??_uart_init+3,w,c
   567  00FEA0  6E04               	movwf	___aldiv@dividend+3,c
   568  00FEA2  C00F  F017         	movff	uart_init@baudrate,??_uart_init+4
   569  00FEA6  C010  F018         	movff	uart_init@baudrate+1,??_uart_init+5
   570  00FEAA  C011  F019         	movff	uart_init@baudrate+2,??_uart_init+6
   571  00FEAE  C012  F01A         	movff	uart_init@baudrate+3,??_uart_init+7
   572  00FEB2  0E04               	movlw	4
   573  00FEB4                     u265:
   574  00FEB4  90D8               	bcf	status,0,c
   575  00FEB6  3617               	rlcf	??_uart_init+4,f,c
   576  00FEB8  3618               	rlcf	??_uart_init+5,f,c
   577  00FEBA  3619               	rlcf	??_uart_init+6,f,c
   578  00FEBC  361A               	rlcf	??_uart_init+7,f,c
   579  00FEBE  2EE8               	decfsz	wreg,f,c
   580  00FEC0  D7F9               	goto	u265
   581  00FEC2  C017  F005         	movff	??_uart_init+4,___aldiv@divisor
   582  00FEC6  C018  F006         	movff	??_uart_init+5,___aldiv@divisor+1
   583  00FECA  C019  F007         	movff	??_uart_init+6,___aldiv@divisor+2
   584  00FECE  C01A  F008         	movff	??_uart_init+7,___aldiv@divisor+3
   585  00FED2  EC80  F07E         	call	___aldiv	;wreg free
   586  00FED6  C001  F01B         	movff	?___aldiv,uart_init@x
   587  00FEDA  C002  F01C         	movff	?___aldiv+1,uart_init@x+1
   588                           
   589                           ;main.c: 83: BRGH = 1;
   590  00FEDE  84AC               	bsf	4012,2,c	;volatile
   591  00FEE0                     l31:
   592                           
   593                           ;main.c: 84: }
   594                           ;main.c: 86: if (x < 256) {
   595  00FEE0  041C               	decf	uart_init@x+1,w,c
   596  00FEE2  B0D8               	btfsc	status,0,c
   597  00FEE4  D00A               	goto	l32
   598                           
   599                           ;main.c: 87: SPBRG = x;
   600  00FEE6  C01B  FFAF         	movff	uart_init@x,4015	;volatile
   601                           
   602                           ;main.c: 88: SYNC = 0;
   603  00FEEA  98AC               	bcf	4012,4,c	;volatile
   604                           
   605                           ;main.c: 89: SPEN = 1;
   606  00FEEC  8EAB               	bsf	4011,7,c	;volatile
   607                           
   608                           ;main.c: 90: TRISC7 = 1;
   609  00FEEE  8E94               	bsf	3988,7,c	;volatile
   610                           
   611                           ;main.c: 91: TRISC6 = 1;
   612  00FEF0  8C94               	bsf	3988,6,c	;volatile
   613                           
   614                           ;main.c: 92: CREN = 1;
   615  00FEF2  88AB               	bsf	4011,4,c	;volatile
   616                           
   617                           ;main.c: 93: TXEN = 1;
   618  00FEF4  8AAC               	bsf	4012,5,c	;volatile
   619                           
   620                           ;main.c: 94: return 1;
   621  00FEF6  0E01               	movlw	1
   622  00FEF8  0012               	return	
   623  00FEFA                     l32:
   624                           
   625                           ;main.c: 95: }
   626                           ;main.c: 96: return 0;
   627  00FEFA  0E00               	movlw	0
   628  00FEFC  0012               	return	
   629  00FEFE                     __end_of_uart_init:
   630                           	opt stack 0
   631                           tblptru	equ	0xFF8
   632                           wreg	equ	0xFE8
   633                           status	equ	0xFD8
   634                           
   635 ;; *************** function ___aldiv *****************
   636 ;; Defined at:
   637 ;;		line 8 in file "/Applications/microchip/xc8/v1.45/sources/common/aldiv.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;  dividend        4    0[COMRAM] long 
   640 ;;  divisor         4    4[COMRAM] long 
   641 ;; Auto vars:     Size  Location     Type
   642 ;;  quotient        4   10[COMRAM] long 
   643 ;;  sign            1    9[COMRAM] unsigned char 
   644 ;;  counter         1    8[COMRAM] unsigned char 
   645 ;; Return value:  Size  Location     Type
   646 ;;                  4    0[COMRAM] long 
   647 ;; Registers used:
   648 ;;		wreg, status,2, status,0
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   654 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   655 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   657 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   658 ;;Total ram usage:       14 bytes
   659 ;; Hardware stack levels used:    1
   660 ;; This function calls:
   661 ;;		Nothing
   662 ;; This function is called by:
   663 ;;		_uart_init
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           	psect	text3
   668  00FD00                     __ptext3:
   669                           	opt stack 0
   670  00FD00                     ___aldiv:
   671                           	opt stack 28
   672                           
   673                           ;incstack = 0
   674  00FD00  0E00               	movlw	0
   675  00FD02  6E0A               	movwf	___aldiv@sign,c
   676  00FD04  AE08               	btfss	___aldiv@divisor+3,7,c
   677  00FD06  D00A               	goto	l152
   678  00FD08  1E08               	comf	___aldiv@divisor+3,f,c
   679  00FD0A  1E07               	comf	___aldiv@divisor+2,f,c
   680  00FD0C  1E06               	comf	___aldiv@divisor+1,f,c
   681  00FD0E  6C05               	negf	___aldiv@divisor,c
   682  00FD10  0E00               	movlw	0
   683  00FD12  2206               	addwfc	___aldiv@divisor+1,f,c
   684  00FD14  2207               	addwfc	___aldiv@divisor+2,f,c
   685  00FD16  2208               	addwfc	___aldiv@divisor+3,f,c
   686  00FD18  0E01               	movlw	1
   687  00FD1A  6E0A               	movwf	___aldiv@sign,c
   688  00FD1C                     l152:
   689  00FD1C  AE04               	btfss	___aldiv@dividend+3,7,c
   690  00FD1E  D00A               	goto	l153
   691  00FD20  1E04               	comf	___aldiv@dividend+3,f,c
   692  00FD22  1E03               	comf	___aldiv@dividend+2,f,c
   693  00FD24  1E02               	comf	___aldiv@dividend+1,f,c
   694  00FD26  6C01               	negf	___aldiv@dividend,c
   695  00FD28  0E00               	movlw	0
   696  00FD2A  2202               	addwfc	___aldiv@dividend+1,f,c
   697  00FD2C  2203               	addwfc	___aldiv@dividend+2,f,c
   698  00FD2E  2204               	addwfc	___aldiv@dividend+3,f,c
   699  00FD30  0E01               	movlw	1
   700  00FD32  1A0A               	xorwf	___aldiv@sign,f,c
   701  00FD34                     l153:
   702  00FD34  0E00               	movlw	0
   703  00FD36  6E0B               	movwf	___aldiv@quotient,c
   704  00FD38  0E00               	movlw	0
   705  00FD3A  6E0C               	movwf	___aldiv@quotient+1,c
   706  00FD3C  0E00               	movlw	0
   707  00FD3E  6E0D               	movwf	___aldiv@quotient+2,c
   708  00FD40  0E00               	movlw	0
   709  00FD42  6E0E               	movwf	___aldiv@quotient+3,c
   710  00FD44  5005               	movf	___aldiv@divisor,w,c
   711  00FD46  1006               	iorwf	___aldiv@divisor+1,w,c
   712  00FD48  1007               	iorwf	___aldiv@divisor+2,w,c
   713  00FD4A  1008               	iorwf	___aldiv@divisor+3,w,c
   714  00FD4C  B4D8               	btfsc	status,2,c
   715  00FD4E  D02A               	goto	l160
   716  00FD50  0E01               	movlw	1
   717  00FD52  6E09               	movwf	___aldiv@counter,c
   718  00FD54  D006               	goto	l155
   719  00FD56  90D8               	bcf	status,0,c
   720  00FD58  3605               	rlcf	___aldiv@divisor,f,c
   721  00FD5A  3606               	rlcf	___aldiv@divisor+1,f,c
   722  00FD5C  3607               	rlcf	___aldiv@divisor+2,f,c
   723  00FD5E  3608               	rlcf	___aldiv@divisor+3,f,c
   724  00FD60  2A09               	incf	___aldiv@counter,f,c
   725  00FD62                     l155:
   726  00FD62  AE08               	btfss	___aldiv@divisor+3,7,c
   727  00FD64  D7F8               	goto	l156
   728  00FD66                     u190:
   729  00FD66  90D8               	bcf	status,0,c
   730  00FD68  360B               	rlcf	___aldiv@quotient,f,c
   731  00FD6A  360C               	rlcf	___aldiv@quotient+1,f,c
   732  00FD6C  360D               	rlcf	___aldiv@quotient+2,f,c
   733  00FD6E  360E               	rlcf	___aldiv@quotient+3,f,c
   734  00FD70  5005               	movf	___aldiv@divisor,w,c
   735  00FD72  5C01               	subwf	___aldiv@dividend,w,c
   736  00FD74  5006               	movf	___aldiv@divisor+1,w,c
   737  00FD76  5802               	subwfb	___aldiv@dividend+1,w,c
   738  00FD78  5007               	movf	___aldiv@divisor+2,w,c
   739  00FD7A  5803               	subwfb	___aldiv@dividend+2,w,c
   740  00FD7C  5008               	movf	___aldiv@divisor+3,w,c
   741  00FD7E  5804               	subwfb	___aldiv@dividend+3,w,c
   742  00FD80  A0D8               	btfss	status,0,c
   743  00FD82  D009               	goto	l159
   744  00FD84  5005               	movf	___aldiv@divisor,w,c
   745  00FD86  5E01               	subwf	___aldiv@dividend,f,c
   746  00FD88  5006               	movf	___aldiv@divisor+1,w,c
   747  00FD8A  5A02               	subwfb	___aldiv@dividend+1,f,c
   748  00FD8C  5007               	movf	___aldiv@divisor+2,w,c
   749  00FD8E  5A03               	subwfb	___aldiv@dividend+2,f,c
   750  00FD90  5008               	movf	___aldiv@divisor+3,w,c
   751  00FD92  5A04               	subwfb	___aldiv@dividend+3,f,c
   752  00FD94  800B               	bsf	___aldiv@quotient,0,c
   753  00FD96                     l159:
   754  00FD96  90D8               	bcf	status,0,c
   755  00FD98  3208               	rrcf	___aldiv@divisor+3,f,c
   756  00FD9A  3207               	rrcf	___aldiv@divisor+2,f,c
   757  00FD9C  3206               	rrcf	___aldiv@divisor+1,f,c
   758  00FD9E  3205               	rrcf	___aldiv@divisor,f,c
   759  00FDA0  2E09               	decfsz	___aldiv@counter,f,c
   760  00FDA2  D7E1               	goto	u190
   761  00FDA4                     l160:
   762  00FDA4  500A               	movf	___aldiv@sign,w,c
   763  00FDA6  B4D8               	btfsc	status,2,c
   764  00FDA8  D008               	goto	l161
   765  00FDAA  1E0E               	comf	___aldiv@quotient+3,f,c
   766  00FDAC  1E0D               	comf	___aldiv@quotient+2,f,c
   767  00FDAE  1E0C               	comf	___aldiv@quotient+1,f,c
   768  00FDB0  6C0B               	negf	___aldiv@quotient,c
   769  00FDB2  0E00               	movlw	0
   770  00FDB4  220C               	addwfc	___aldiv@quotient+1,f,c
   771  00FDB6  220D               	addwfc	___aldiv@quotient+2,f,c
   772  00FDB8  220E               	addwfc	___aldiv@quotient+3,f,c
   773  00FDBA                     l161:
   774  00FDBA  C00B  F001         	movff	___aldiv@quotient,?___aldiv
   775  00FDBE  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
   776  00FDC2  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
   777  00FDC6  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
   778  00FDCA  0012               	return	
   779  00FDCC                     __end_of___aldiv:
   780                           	opt stack 0
   781                           tblptru	equ	0xFF8
   782                           wreg	equ	0xFE8
   783                           status	equ	0xFD8
   784                           
   785 ;; *************** function _port_init *****************
   786 ;; Defined at:
   787 ;;		line 150 in file "main.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;		None
   790 ;; Auto vars:     Size  Location     Type
   791 ;;		None
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      unsigned char 
   794 ;; Registers used:
   795 ;;		wreg, status,2
   796 ;; Tracked objects:
   797 ;;		On entry : 0/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   805 ;;Total ram usage:        0 bytes
   806 ;; Hardware stack levels used:    1
   807 ;; This function calls:
   808 ;;		Nothing
   809 ;; This function is called by:
   810 ;;		_system_init
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           	psect	text4
   815  00FC74                     __ptext4:
   816                           	opt stack 0
   817  00FC74                     _port_init:
   818                           	opt stack 29
   819                           
   820                           ;main.c: 152: TRISD = 0;
   821                           
   822                           ;incstack = 0
   823  00FC74  0E00               	movlw	0
   824  00FC76  6E95               	movwf	3989,c	;volatile
   825                           
   826                           ;main.c: 155: PORTD = 0;
   827  00FC78  0E00               	movlw	0
   828  00FC7A  6E83               	movwf	3971,c	;volatile
   829                           
   830                           ;main.c: 159: return 1;
   831  00FC7C  0E01               	movlw	1
   832  00FC7E  0012               	return	
   833  00FC80                     __end_of_port_init:
   834                           	opt stack 0
   835                           tblptru	equ	0xFF8
   836                           wreg	equ	0xFE8
   837                           status	equ	0xFD8
   838                           
   839 ;; *************** function _loop *****************
   840 ;; Defined at:
   841 ;;		line 212 in file "main.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;		None
   844 ;; Auto vars:     Size  Location     Type
   845 ;;  b               1    1[COMRAM] unsigned char 
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		wreg, status,2, cstack
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   856 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   859 ;;Total ram usage:        1 bytes
   860 ;; Hardware stack levels used:    1
   861 ;; Hardware stack levels required when called:    1
   862 ;; This function calls:
   863 ;;		_blink
   864 ;;		_uart_data_ready
   865 ;;		_uart_read
   866 ;; This function is called by:
   867 ;;		_main
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           	psect	text5
   872  00FC94                     __ptext5:
   873                           	opt stack 0
   874  00FC94                     _loop:
   875                           	opt stack 29
   876                           
   877                           ;main.c: 213: char b = 0;
   878                           
   879                           ;incstack = 0
   880  00FC94  0E00               	movlw	0
   881  00FC96  6E02               	movwf	loop@b,c
   882                           
   883                           ;main.c: 214: if (uart_data_ready()) {
   884  00FC98  EC2D  F07E         	call	_uart_data_ready	;wreg free
   885  00FC9C  0900               	iorlw	0
   886  00FC9E  B4D8               	btfsc	status,2,c
   887  00FCA0  0012               	return	
   888                           
   889                           ;main.c: 215: b = uart_read();
   890  00FCA2  EC31  F07E         	call	_uart_read	;wreg free
   891  00FCA6  6E02               	movwf	loop@b,c
   892                           
   893                           ;main.c: 221: blink();
   894  00FCA8  EC40  F07E         	call	_blink	;wreg free
   895  00FCAC  0012               	return	
   896  00FCAE                     __end_of_loop:
   897                           	opt stack 0
   898                           tblptru	equ	0xFF8
   899                           wreg	equ	0xFE8
   900                           status	equ	0xFD8
   901                           
   902 ;; *************** function _uart_read *****************
   903 ;; Defined at:
   904 ;;		line 134 in file "main.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;		None
   907 ;; Auto vars:     Size  Location     Type
   908 ;;		None
   909 ;; Return value:  Size  Location     Type
   910 ;;                  1    wreg      unsigned char 
   911 ;; Registers used:
   912 ;;		wreg, status,2
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   922 ;;Total ram usage:        0 bytes
   923 ;; Hardware stack levels used:    1
   924 ;; This function calls:
   925 ;;		Nothing
   926 ;; This function is called by:
   927 ;;		_loop
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           	psect	text6
   932  00FC62                     __ptext6:
   933                           	opt stack 0
   934  00FC62                     _uart_read:
   935                           	opt stack 29
   936                           
   937                           ;main.c: 135: while (!RCIF);
   938                           
   939                           ;incstack = 0
   940  00FC62  AA9E               	btfss	3998,5,c	;volatile
   941  00FC64  D7FE               	goto	_uart_read
   942                           
   943                           ;main.c: 136: return RCREG;
   944  00FC66  50AE               	movf	4014,w,c	;volatile
   945  00FC68  0012               	return	
   946  00FC6A                     __end_of_uart_read:
   947                           	opt stack 0
   948                           tblptru	equ	0xFF8
   949                           wreg	equ	0xFE8
   950                           status	equ	0xFD8
   951                           
   952 ;; *************** function _uart_data_ready *****************
   953 ;; Defined at:
   954 ;;		line 109 in file "main.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;		None
   957 ;; Auto vars:     Size  Location     Type
   958 ;;		None
   959 ;; Return value:  Size  Location     Type
   960 ;;                  1    wreg      unsigned char 
   961 ;; Registers used:
   962 ;;		wreg
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   972 ;;Total ram usage:        0 bytes
   973 ;; Hardware stack levels used:    1
   974 ;; This function calls:
   975 ;;		Nothing
   976 ;; This function is called by:
   977 ;;		_loop
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           	psect	text7
   982  00FC5A                     __ptext7:
   983                           	opt stack 0
   984  00FC5A                     _uart_data_ready:
   985                           	opt stack 29
   986                           
   987                           ;main.c: 110: return RCIF;
   988                           
   989                           ;incstack = 0
   990  00FC5A  0E00               	movlw	0
   991  00FC5C  BA9E               	btfsc	3998,5,c	;volatile
   992  00FC5E  0E01               	movlw	1
   993  00FC60  0012               	return	
   994  00FC62                     __end_of_uart_data_ready:
   995                           	opt stack 0
   996                           tblptru	equ	0xFF8
   997                           wreg	equ	0xFE8
   998                           status	equ	0xFD8
   999                           
  1000 ;; *************** function _blink *****************
  1001 ;; Defined at:
  1002 ;;		line 187 in file "main.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		wreg
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1018 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1019 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1020 ;;Total ram usage:        1 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; This function calls:
  1023 ;;		Nothing
  1024 ;; This function is called by:
  1025 ;;		_loop
  1026 ;;		_error
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           	psect	text8
  1031  00FC80                     __ptext8:
  1032                           	opt stack 0
  1033  00FC80                     _blink:
  1034                           	opt stack 29
  1035                           
  1036                           ;main.c: 188: PORTDbits.RD1 = 1;
  1037                           
  1038                           ;incstack = 0
  1039  00FC80  8283               	bsf	3971,1,c	;volatile
  1040                           
  1041                           ;main.c: 189: _delay((unsigned long)((1)*(8000000/4000.0)));
  1042  00FC82  0E03               	movlw	3
  1043  00FC84  6E01               	movwf	??_blink& (0+255),c
  1044  00FC86  0E98               	movlw	152
  1045  00FC88                     u297:
  1046  00FC88  2EE8               	decfsz	wreg,f,c
  1047  00FC8A  D7FE               	bra	u297
  1048  00FC8C  2E01               	decfsz	??_blink& (0+255),f,c
  1049  00FC8E  D7FC               	bra	u297
  1050                           
  1051                           ;main.c: 190: PORTDbits.RD1 = 0;
  1052  00FC90  9283               	bcf	3971,1,c	;volatile
  1053  00FC92  0012               	return		;funcret
  1054  00FC94                     __end_of_blink:
  1055                           	opt stack 0
  1056                           tblptru	equ	0xFF8
  1057                           wreg	equ	0xFE8
  1058                           status	equ	0xFD8
  1059                           tblptru	equ	0xFF8
  1060                           wreg	equ	0xFE8
  1061                           status	equ	0xFD8
  1062                           
  1063                           	psect	rparam
  1064  0000                     tblptru	equ	0xFF8
  1065                           wreg	equ	0xFE8
  1066                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    256
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     37      37
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_system_init
    _system_init->_uart_init
    _uart_init->___aldiv
    _loop->_blink

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1016
                                             33 COMRAM     4     4      0
                               _loop
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          5     1      4     993
                                             28 COMRAM     5     1      4
                          _port_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (2) _uart_init                                           14    10      4     836
                                             14 COMRAM    14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loop                                                 1     1      0       0
                                              1 COMRAM     1     1      0
                              _blink
                    _uart_data_ready
                          _uart_read
 ---------------------------------------------------------------------------------
 (2) _uart_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _uart_data_ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _blink                                                1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _blink
     _uart_data_ready
     _uart_read
   _system_init
     _port_init
     _uart_init
       ___aldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     25      25       1       29.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
ABS                  0      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BIGRAM             F7F      0       0      37        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jan 16 08:57:59 2018

                ??_uart_data_ready 0001                                 l31 FEE0  
                               l32 FEFA                                 l70 FCFA  
                      __CFG_OSC$HS 000000                __end_of_system_init FCD6  
                              l160 FDA4                                l152 FD1C  
                              l161 FDBA                                l153 FD34  
                              l155 FD62                                l156 FD56  
                              l159 FD96                                u225 FDDE  
                              u235 FE28                                u190 FD66  
                              u255 FE6A                                u265 FEB4  
                              u297 FC88                                wreg 000FE8  
                     __CFG_LVP$OFF 000000                       __CFG_WDT$OFF 000000  
                             _BRGH 007D62                               _CREN 007D5C  
                             _RCIF 007CF5                               _SPEN 007D5F  
                             _TXEN 007D65                               _SYNC 007D64  
                             _main FCD6                               _loop FC94  
                             start 0000                       ___param_bank 000000  
                  __end_of___aldiv FDCC                              ?_main 0001  
                            ?_loop 0001                     __CFG_DEBUG$OFF 000000  
                            _RCREG 000FAE                              _SPBRG 000FAF  
                            _PORTB 000F81                              _PORTD 000F83  
                            _TRISB 000F93                              _TRISD 000F95  
                    __CFG_PWRT$OFF 000000                              _blink FC80  
                   __CFG_BOREN$OFF 000000                              loop@b 0002  
                            status 000FD8                     __CFG_MCLRE$OFF 000000  
                  __initialization FC6A                        _system_init FCAE  
                     __end_of_main FD00                       __end_of_loop FCAE  
                           ??_main 0022                             ??_loop 0002  
                    __activetblptr 000002                             ?_blink 0001  
                           _TRISC6 007CA6                             _TRISC7 007CA7  
                        ??___aldiv 0009                       __mediumconst FEFE  
                           tblptru 000FF8                    _uart_data_ready FC5A  
                       __accesstop 0080            __end_of__initialization FC6A  
                  __CFG_PBADEN$OFF 000000                      ___rparam_used 000001  
                   __pcstackCOMRAM 0001                      __end_of_blink FC94  
              system_init@baudrate 001D                            ??_blink 0001  
               __size_of_uart_init 0132                 __size_of_uart_read 0008  
               __size_of_port_init 000C            __end_of_uart_data_ready FC62  
                          __Hparam 0000                            __Lparam 0000  
                     ?_system_init 001D                            ___aldiv FD00  
                          __pcinit FC6A                            __ramtop 1000  
                          __ptext0 FCD6                            __ptext1 FCAE  
                          __ptext2 FDCC                            __ptext3 FD00  
                          __ptext4 FC74                            __ptext5 FC94  
                          __ptext6 FC62                            __ptext7 FC5A  
                          __ptext8 FC80  __end_of_MIDI_NOTE_FREQUENCY_TABLE FFFF  
                 ___aldiv@dividend 0001               end_of_initialization FC6A  
                    __Lmediumconst FEFE                  __end_of_uart_init FEFE  
                __end_of_uart_read FC6A                  __end_of_port_init FC80  
                 ___aldiv@quotient 000B                          _PORTDbits 000F83  
               main@MIDI_BAUD_RATE 0022                   ?_uart_data_ready 0001  
              start_initialization FC6A               __size_of_system_init 0028  
                    __pmediumconst FEFE                           ?___aldiv 0001  
                   __size_of_blink 0014          _MIDI_NOTE_FREQUENCY_TABLE FEFF  
                  ___aldiv@divisor 0005                    ___aldiv@counter 0009  
                        _uart_init FDCC                          _uart_read FC62  
                       uart_init@x 001B                          _port_init FC74  
                         __Hrparam 0000                           __Lrparam 0000  
                       ?_uart_init 000F                         ?_uart_read 0001  
                 __size_of___aldiv 00CC                         ?_port_init 0001  
                system_init@status 0021                      __size_of_main 002A  
                    __size_of_loop 001A           __size_of_uart_data_ready 0008  
                uart_init@baudrate 000F                      ??_system_init 0021  
                      ??_uart_init 0013                        ??_uart_read 0001  
                      ??_port_init 0001                       ___aldiv@sign 000A  
