

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Jan 15 10:37:32 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1
    16                           	psect	text9,global,reloc=2,class=CODE,delta=1
    17                           	psect	text10,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20  0000                     
    21                           ; Version 1.45
    22                           ; Generated 16/11/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4620 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     _PORTDbits	set	3971
    56  0000                     _PORTD	set	3971
    57  0000                     _TRISD	set	3989
    58  0000                     _RCREG	set	4014
    59  0000                     _SPBRG	set	4015
    60  0000                     _RCIF	set	31989
    61  0000                     _TXEN	set	32101
    62  0000                     _CREN	set	32092
    63  0000                     _TRISC6	set	31910
    64  0000                     _TRISC7	set	31911
    65  0000                     _SPEN	set	32095
    66  0000                     _SYNC	set	32100
    67  0000                     _BRGH	set	32098
    68                           
    69                           ; #config settings
    70  0000                     
    71                           	psect	cinit
    72  00FD52                     __pcinit:
    73                           	opt stack 0
    74  00FD52                     start_initialization:
    75                           	opt stack 0
    76  00FD52                     __initialization:
    77                           	opt stack 0
    78  00FD52                     end_of_initialization:
    79                           	opt stack 0
    80  00FD52                     __end_of__initialization:
    81                           	opt stack 0
    82  00FD52  0100               	movlb	0
    83  00FD54  EFB4  F07E         	goto	_main	;jump to C main() function
    84                           
    85                           	psect	cstackCOMRAM
    86  000001                     __pcstackCOMRAM:
    87                           	opt stack 0
    88  000001                     ??_blink:
    89  000001                     ??_wait:
    90  000001                     ?___aldiv:
    91                           	opt stack 0
    92  000001                     ___aldiv@dividend:
    93                           	opt stack 0
    94                           
    95                           ; 4 bytes @ 0x0
    96  000001                     	ds	1
    97  000002                     loop@b:
    98                           	opt stack 0
    99                           
   100                           ; 1 bytes @ 0x1
   101  000002                     	ds	1
   102  000003                     
   103                           ; 1 bytes @ 0x2
   104  000003                     	ds	2
   105  000005                     ___aldiv@divisor:
   106                           	opt stack 0
   107                           
   108                           ; 4 bytes @ 0x4
   109  000005                     	ds	4
   110  000009                     ___aldiv@counter:
   111                           	opt stack 0
   112                           
   113                           ; 1 bytes @ 0x8
   114  000009                     	ds	1
   115  00000A                     ___aldiv@sign:
   116                           	opt stack 0
   117                           
   118                           ; 1 bytes @ 0x9
   119  00000A                     	ds	1
   120  00000B                     ___aldiv@quotient:
   121                           	opt stack 0
   122                           
   123                           ; 4 bytes @ 0xA
   124  00000B                     	ds	4
   125  00000F                     uart_init@baudrate:
   126                           	opt stack 0
   127                           
   128                           ; 4 bytes @ 0xE
   129  00000F                     	ds	4
   130  000013                     ??_uart_init:
   131                           
   132                           ; 1 bytes @ 0x12
   133  000013                     	ds	8
   134  00001B                     uart_init@x:
   135                           	opt stack 0
   136                           
   137                           ; 2 bytes @ 0x1A
   138  00001B                     	ds	2
   139  00001D                     
   140                           ; 1 bytes @ 0x1C
   141 ;;
   142 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   143 ;;
   144 ;; *************** function _main *****************
   145 ;; Defined at:
   146 ;;		line 112 in file "main.c"
   147 ;; Parameters:    Size  Location     Type
   148 ;;		None
   149 ;; Auto vars:     Size  Location     Type
   150 ;;		None
   151 ;; Return value:  Size  Location     Type
   152 ;;                  1    wreg      void 
   153 ;; Registers used:
   154 ;;		wreg, status,2, status,0, cstack
   155 ;; Tracked objects:
   156 ;;		On entry : 0/0
   157 ;;		On exit  : 0/0
   158 ;;		Unchanged: 0/0
   159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   164 ;;Total ram usage:        0 bytes
   165 ;; Hardware stack levels required when called:    3
   166 ;; This function calls:
   167 ;;		_init
   168 ;;		_loop
   169 ;; This function is called by:
   170 ;;		Startup code after reset
   171 ;; This function uses a non-reentrant model
   172 ;;
   173                           
   174                           	psect	text0
   175  00FD68                     __ptext0:
   176                           	opt stack 0
   177  00FD68                     _main:
   178                           	opt stack 28
   179                           
   180                           ;main.c: 113: init();
   181                           
   182                           ;incstack = 0
   183  00FD68  ECEB  F07E         	call	_init	;wreg free
   184  00FD6C                     
   185                           ;main.c: 115: loop();
   186  00FD6C  ECDE  F07E         	call	_loop	;wreg free
   187                           
   188                           ;main.c: 116: }
   189  00FD70  D7FD               	goto	l72
   190  00FD72                     __end_of_main:
   191                           	opt stack 0
   192                           
   193 ;; *************** function _loop *****************
   194 ;; Defined at:
   195 ;;		line 104 in file "main.c"
   196 ;; Parameters:    Size  Location     Type
   197 ;;		None
   198 ;; Auto vars:     Size  Location     Type
   199 ;;  b               1    1[COMRAM] unsigned char 
   200 ;; Return value:  Size  Location     Type
   201 ;;                  1    wreg      void 
   202 ;; Registers used:
   203 ;;		wreg, status,2, cstack
   204 ;; Tracked objects:
   205 ;;		On entry : 0/0
   206 ;;		On exit  : 0/0
   207 ;;		Unchanged: 0/0
   208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   210 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   212 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   213 ;;Total ram usage:        1 bytes
   214 ;; Hardware stack levels used:    1
   215 ;; Hardware stack levels required when called:    1
   216 ;; This function calls:
   217 ;;		_blink
   218 ;;		_uart_data_ready
   219 ;;		_uart_read
   220 ;; This function is called by:
   221 ;;		_main
   222 ;; This function uses a non-reentrant model
   223 ;;
   224                           
   225                           	psect	text1
   226  00FDBC                     __ptext1:
   227                           	opt stack 0
   228  00FDBC                     _loop:
   229                           	opt stack 29
   230                           
   231                           ;main.c: 105: char b = 0;
   232                           
   233                           ;incstack = 0
   234  00FDBC  0E00               	movlw	0
   235  00FDBE  6E02               	movwf	loop@b,c
   236                           
   237                           ;main.c: 106: if (uart_data_ready()) {
   238  00FDC0  ECAC  F07E         	call	_uart_data_ready	;wreg free
   239  00FDC4  0900               	iorlw	0
   240  00FDC6  B4D8               	btfsc	status,2,c
   241  00FDC8  0012               	return	
   242                           
   243                           ;main.c: 107: b = uart_read();
   244  00FDCA  ECB0  F07E         	call	_uart_read	;wreg free
   245  00FDCE  6E02               	movwf	loop@b,c
   246                           
   247                           ;main.c: 108: blink();
   248  00FDD0  ECC8  F07E         	call	_blink	;wreg free
   249  00FDD4  0012               	return	
   250  00FDD6                     __end_of_loop:
   251                           	opt stack 0
   252                           status	equ	0xFD8
   253                           
   254 ;; *************** function _uart_read *****************
   255 ;; Defined at:
   256 ;;		line 62 in file "main.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;		None
   259 ;; Auto vars:     Size  Location     Type
   260 ;;		None
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      unsigned char 
   263 ;; Registers used:
   264 ;;		wreg, status,2
   265 ;; Tracked objects:
   266 ;;		On entry : 0/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   274 ;;Total ram usage:        0 bytes
   275 ;; Hardware stack levels used:    1
   276 ;; This function calls:
   277 ;;		Nothing
   278 ;; This function is called by:
   279 ;;		_loop
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           
   283                           	psect	text2
   284  00FD60                     __ptext2:
   285                           	opt stack 0
   286  00FD60                     _uart_read:
   287                           	opt stack 29
   288                           
   289                           ;main.c: 63: while (!RCIF);
   290                           
   291                           ;incstack = 0
   292  00FD60  AA9E               	btfss	3998,5,c	;volatile
   293  00FD62  D7FE               	goto	_uart_read
   294                           
   295                           ;main.c: 64: return RCREG;
   296  00FD64  50AE               	movf	4014,w,c	;volatile
   297  00FD66  0012               	return	
   298  00FD68                     __end_of_uart_read:
   299                           	opt stack 0
   300                           status	equ	0xFD8
   301                           
   302 ;; *************** function _uart_data_ready *****************
   303 ;; Defined at:
   304 ;;		line 55 in file "main.c"
   305 ;; Parameters:    Size  Location     Type
   306 ;;		None
   307 ;; Auto vars:     Size  Location     Type
   308 ;;		None
   309 ;; Return value:  Size  Location     Type
   310 ;;                  1    wreg      unsigned char 
   311 ;; Registers used:
   312 ;;		wreg
   313 ;; Tracked objects:
   314 ;;		On entry : 0/0
   315 ;;		On exit  : 0/0
   316 ;;		Unchanged: 0/0
   317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   322 ;;Total ram usage:        0 bytes
   323 ;; Hardware stack levels used:    1
   324 ;; This function calls:
   325 ;;		Nothing
   326 ;; This function is called by:
   327 ;;		_loop
   328 ;; This function uses a non-reentrant model
   329 ;;
   330                           
   331                           	psect	text3
   332  00FD58                     __ptext3:
   333                           	opt stack 0
   334  00FD58                     _uart_data_ready:
   335                           	opt stack 29
   336                           
   337                           ;main.c: 56: return RCIF;
   338                           
   339                           ;incstack = 0
   340  00FD58  0E00               	movlw	0
   341  00FD5A  BA9E               	btfsc	3998,5,c	;volatile
   342  00FD5C  0E01               	movlw	1
   343  00FD5E  0012               	return	
   344  00FD60                     __end_of_uart_data_ready:
   345                           	opt stack 0
   346                           status	equ	0xFD8
   347                           
   348 ;; *************** function _init *****************
   349 ;; Defined at:
   350 ;;		line 76 in file "main.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;		None
   353 ;; Auto vars:     Size  Location     Type
   354 ;;		None
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      unsigned char 
   357 ;; Registers used:
   358 ;;		wreg, status,2, status,0, cstack
   359 ;; Tracked objects:
   360 ;;		On entry : 0/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   368 ;;Total ram usage:        0 bytes
   369 ;; Hardware stack levels used:    1
   370 ;; Hardware stack levels required when called:    2
   371 ;; This function calls:
   372 ;;		_error
   373 ;;		_port_init
   374 ;;		_uart_init
   375 ;; This function is called by:
   376 ;;		_main
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380                           	psect	text4
   381  00FDD6                     __ptext4:
   382                           	opt stack 0
   383  00FDD6                     _init:
   384                           	opt stack 28
   385                           
   386                           ;main.c: 77: if (!port_init()) {
   387                           
   388                           ;incstack = 0
   389  00FDD6  ECB9  F07E         	call	_port_init	;wreg free
   390  00FDDA  0900               	iorlw	0
   391  00FDDC  B4D8               	btfsc	status,2,c
   392                           
   393                           ;main.c: 78: error();
   394  00FDDE  ECBF  F07E         	call	_error	;wreg free
   395                           
   396                           ;main.c: 79: }
   397                           ;main.c: 80: if (!uart_init(31250)) {
   398  00FDE2  0E12               	movlw	18
   399  00FDE4  6E0F               	movwf	uart_init@baudrate,c
   400  00FDE6  0E7A               	movlw	122
   401  00FDE8  6E10               	movwf	uart_init@baudrate+1,c
   402  00FDEA  0E00               	movlw	0
   403  00FDEC  6E11               	movwf	uart_init@baudrate+2,c
   404  00FDEE  0E00               	movlw	0
   405  00FDF0  6E12               	movwf	uart_init@baudrate+3,c
   406  00FDF2  EC67  F07F         	call	_uart_init	;wreg free
   407  00FDF6  0900               	iorlw	0
   408  00FDF8  A4D8               	btfss	status,2,c
   409  00FDFA  0012               	return	
   410                           
   411                           ;main.c: 81: error();
   412  00FDFC  ECBF  F07E         	call	_error	;wreg free
   413  00FE00  0012               	return	
   414  00FE02                     __end_of_init:
   415                           	opt stack 0
   416                           status	equ	0xFD8
   417                           
   418 ;; *************** function _uart_init *****************
   419 ;; Defined at:
   420 ;;		line 32 in file "main.c"
   421 ;; Parameters:    Size  Location     Type
   422 ;;  baudrate        4   14[COMRAM] const long 
   423 ;; Auto vars:     Size  Location     Type
   424 ;;  x               2   26[COMRAM] unsigned int 
   425 ;; Return value:  Size  Location     Type
   426 ;;                  1    wreg      unsigned char 
   427 ;; Registers used:
   428 ;;		wreg, status,2, status,0, cstack
   429 ;; Tracked objects:
   430 ;;		On entry : 0/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   434 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   435 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   436 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   437 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   438 ;;Total ram usage:       14 bytes
   439 ;; Hardware stack levels used:    1
   440 ;; Hardware stack levels required when called:    1
   441 ;; This function calls:
   442 ;;		___aldiv
   443 ;; This function is called by:
   444 ;;		_init
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448                           	psect	text5
   449  00FECE                     __ptext5:
   450                           	opt stack 0
   451  00FECE                     _uart_init:
   452                           	opt stack 28
   453                           
   454                           ;main.c: 33: unsigned int x;
   455                           ;main.c: 34: x = (8000000 - (baudrate * 64)) / (baudrate * 64);
   456                           
   457                           ;incstack = 0
   458  00FECE  C00F  F013         	movff	uart_init@baudrate,??_uart_init
   459  00FED2  C010  F014         	movff	uart_init@baudrate+1,??_uart_init+1
   460  00FED6  C011  F015         	movff	uart_init@baudrate+2,??_uart_init+2
   461  00FEDA  C012  F016         	movff	uart_init@baudrate+3,??_uart_init+3
   462  00FEDE  0E06               	movlw	6
   463  00FEE0                     u235:
   464  00FEE0  90D8               	bcf	status,0,c
   465  00FEE2  3613               	rlcf	??_uart_init,f,c
   466  00FEE4  3614               	rlcf	??_uart_init+1,f,c
   467  00FEE6  3615               	rlcf	??_uart_init+2,f,c
   468  00FEE8  3616               	rlcf	??_uart_init+3,f,c
   469  00FEEA  2EE8               	decfsz	wreg,f,c
   470  00FEEC  D7F9               	goto	u235
   471  00FEEE  1E13               	comf	??_uart_init,f,c
   472  00FEF0  1E14               	comf	??_uart_init+1,f,c
   473  00FEF2  1E15               	comf	??_uart_init+2,f,c
   474  00FEF4  1E16               	comf	??_uart_init+3,f,c
   475  00FEF6  2A13               	incf	??_uart_init,f,c
   476  00FEF8  0E00               	movlw	0
   477  00FEFA  2214               	addwfc	??_uart_init+1,f,c
   478  00FEFC  2215               	addwfc	??_uart_init+2,f,c
   479  00FEFE  2216               	addwfc	??_uart_init+3,f,c
   480  00FF00  0E00               	movlw	0
   481  00FF02  2413               	addwf	??_uart_init,w,c
   482  00FF04  6E01               	movwf	___aldiv@dividend,c
   483  00FF06  0E12               	movlw	18
   484  00FF08  2014               	addwfc	??_uart_init+1,w,c
   485  00FF0A  6E02               	movwf	___aldiv@dividend+1,c
   486  00FF0C  0E7A               	movlw	122
   487  00FF0E  2015               	addwfc	??_uart_init+2,w,c
   488  00FF10  6E03               	movwf	___aldiv@dividend+2,c
   489  00FF12  0E00               	movlw	0
   490  00FF14  2016               	addwfc	??_uart_init+3,w,c
   491  00FF16  6E04               	movwf	___aldiv@dividend+3,c
   492  00FF18  C00F  F017         	movff	uart_init@baudrate,??_uart_init+4
   493  00FF1C  C010  F018         	movff	uart_init@baudrate+1,??_uart_init+5
   494  00FF20  C011  F019         	movff	uart_init@baudrate+2,??_uart_init+6
   495  00FF24  C012  F01A         	movff	uart_init@baudrate+3,??_uart_init+7
   496  00FF28  0E06               	movlw	6
   497  00FF2A                     u245:
   498  00FF2A  90D8               	bcf	status,0,c
   499  00FF2C  3617               	rlcf	??_uart_init+4,f,c
   500  00FF2E  3618               	rlcf	??_uart_init+5,f,c
   501  00FF30  3619               	rlcf	??_uart_init+6,f,c
   502  00FF32  361A               	rlcf	??_uart_init+7,f,c
   503  00FF34  2EE8               	decfsz	wreg,f,c
   504  00FF36  D7F9               	goto	u245
   505  00FF38  C017  F005         	movff	??_uart_init+4,___aldiv@divisor
   506  00FF3C  C018  F006         	movff	??_uart_init+5,___aldiv@divisor+1
   507  00FF40  C019  F007         	movff	??_uart_init+6,___aldiv@divisor+2
   508  00FF44  C01A  F008         	movff	??_uart_init+7,___aldiv@divisor+3
   509  00FF48  EC01  F07F         	call	___aldiv	;wreg free
   510  00FF4C  C001  F01B         	movff	?___aldiv,uart_init@x
   511  00FF50  C002  F01C         	movff	?___aldiv+1,uart_init@x+1
   512                           
   513                           ;main.c: 35: if (x > 255) {
   514  00FF54  041C               	decf	uart_init@x+1,w,c
   515  00FF56  A0D8               	btfss	status,0,c
   516  00FF58  D044               	goto	l33
   517                           
   518                           ;main.c: 36: x = (8000000 - (baudrate * 16)) / (baudrate * 16);
   519  00FF5A  C00F  F013         	movff	uart_init@baudrate,??_uart_init
   520  00FF5E  C010  F014         	movff	uart_init@baudrate+1,??_uart_init+1
   521  00FF62  C011  F015         	movff	uart_init@baudrate+2,??_uart_init+2
   522  00FF66  C012  F016         	movff	uart_init@baudrate+3,??_uart_init+3
   523  00FF6A  0E04               	movlw	4
   524  00FF6C                     u265:
   525  00FF6C  90D8               	bcf	status,0,c
   526  00FF6E  3613               	rlcf	??_uart_init,f,c
   527  00FF70  3614               	rlcf	??_uart_init+1,f,c
   528  00FF72  3615               	rlcf	??_uart_init+2,f,c
   529  00FF74  3616               	rlcf	??_uart_init+3,f,c
   530  00FF76  2EE8               	decfsz	wreg,f,c
   531  00FF78  D7F9               	goto	u265
   532  00FF7A  1E13               	comf	??_uart_init,f,c
   533  00FF7C  1E14               	comf	??_uart_init+1,f,c
   534  00FF7E  1E15               	comf	??_uart_init+2,f,c
   535  00FF80  1E16               	comf	??_uart_init+3,f,c
   536  00FF82  2A13               	incf	??_uart_init,f,c
   537  00FF84  0E00               	movlw	0
   538  00FF86  2214               	addwfc	??_uart_init+1,f,c
   539  00FF88  2215               	addwfc	??_uart_init+2,f,c
   540  00FF8A  2216               	addwfc	??_uart_init+3,f,c
   541  00FF8C  0E00               	movlw	0
   542  00FF8E  2413               	addwf	??_uart_init,w,c
   543  00FF90  6E01               	movwf	___aldiv@dividend,c
   544  00FF92  0E12               	movlw	18
   545  00FF94  2014               	addwfc	??_uart_init+1,w,c
   546  00FF96  6E02               	movwf	___aldiv@dividend+1,c
   547  00FF98  0E7A               	movlw	122
   548  00FF9A  2015               	addwfc	??_uart_init+2,w,c
   549  00FF9C  6E03               	movwf	___aldiv@dividend+2,c
   550  00FF9E  0E00               	movlw	0
   551  00FFA0  2016               	addwfc	??_uart_init+3,w,c
   552  00FFA2  6E04               	movwf	___aldiv@dividend+3,c
   553  00FFA4  C00F  F017         	movff	uart_init@baudrate,??_uart_init+4
   554  00FFA8  C010  F018         	movff	uart_init@baudrate+1,??_uart_init+5
   555  00FFAC  C011  F019         	movff	uart_init@baudrate+2,??_uart_init+6
   556  00FFB0  C012  F01A         	movff	uart_init@baudrate+3,??_uart_init+7
   557  00FFB4  0E04               	movlw	4
   558  00FFB6                     u275:
   559  00FFB6  90D8               	bcf	status,0,c
   560  00FFB8  3617               	rlcf	??_uart_init+4,f,c
   561  00FFBA  3618               	rlcf	??_uart_init+5,f,c
   562  00FFBC  3619               	rlcf	??_uart_init+6,f,c
   563  00FFBE  361A               	rlcf	??_uart_init+7,f,c
   564  00FFC0  2EE8               	decfsz	wreg,f,c
   565  00FFC2  D7F9               	goto	u275
   566  00FFC4  C017  F005         	movff	??_uart_init+4,___aldiv@divisor
   567  00FFC8  C018  F006         	movff	??_uart_init+5,___aldiv@divisor+1
   568  00FFCC  C019  F007         	movff	??_uart_init+6,___aldiv@divisor+2
   569  00FFD0  C01A  F008         	movff	??_uart_init+7,___aldiv@divisor+3
   570  00FFD4  EC01  F07F         	call	___aldiv	;wreg free
   571  00FFD8  C001  F01B         	movff	?___aldiv,uart_init@x
   572  00FFDC  C002  F01C         	movff	?___aldiv+1,uart_init@x+1
   573                           
   574                           ;main.c: 37: BRGH = 1;
   575  00FFE0  84AC               	bsf	4012,2,c	;volatile
   576  00FFE2                     l33:
   577                           
   578                           ;main.c: 38: }
   579                           ;main.c: 40: if (x < 256) {
   580  00FFE2  041C               	decf	uart_init@x+1,w,c
   581  00FFE4  B0D8               	btfsc	status,0,c
   582  00FFE6  D00A               	goto	l34
   583                           
   584                           ;main.c: 41: SPBRG = x;
   585  00FFE8  C01B  FFAF         	movff	uart_init@x,4015	;volatile
   586                           
   587                           ;main.c: 42: SYNC = 0;
   588  00FFEC  98AC               	bcf	4012,4,c	;volatile
   589                           
   590                           ;main.c: 43: SPEN = 1;
   591  00FFEE  8EAB               	bsf	4011,7,c	;volatile
   592                           
   593                           ;main.c: 44: TRISC7 = 1;
   594  00FFF0  8E94               	bsf	3988,7,c	;volatile
   595                           
   596                           ;main.c: 45: TRISC6 = 1;
   597  00FFF2  8C94               	bsf	3988,6,c	;volatile
   598                           
   599                           ;main.c: 46: CREN = 1;
   600  00FFF4  88AB               	bsf	4011,4,c	;volatile
   601                           
   602                           ;main.c: 47: TXEN = 1;
   603  00FFF6  8AAC               	bsf	4012,5,c	;volatile
   604                           
   605                           ;main.c: 48: return 1;
   606  00FFF8  0E01               	movlw	1
   607  00FFFA  0012               	return	
   608  00FFFC                     l34:
   609                           
   610                           ;main.c: 49: }
   611                           ;main.c: 50: return 0;
   612  00FFFC  0E00               	movlw	0
   613  00FFFE  0012               	return	
   614  010000                     __end_of_uart_init:
   615                           	opt stack 0
   616                           wreg	equ	0xFE8
   617                           status	equ	0xFD8
   618                           
   619 ;; *************** function ___aldiv *****************
   620 ;; Defined at:
   621 ;;		line 8 in file "/Applications/microchip/xc8/v1.45/sources/common/aldiv.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;  dividend        4    0[COMRAM] long 
   624 ;;  divisor         4    4[COMRAM] long 
   625 ;; Auto vars:     Size  Location     Type
   626 ;;  quotient        4   10[COMRAM] long 
   627 ;;  sign            1    9[COMRAM] unsigned char 
   628 ;;  counter         1    8[COMRAM] unsigned char 
   629 ;; Return value:  Size  Location     Type
   630 ;;                  4    0[COMRAM] long 
   631 ;; Registers used:
   632 ;;		wreg, status,2, status,0
   633 ;; Tracked objects:
   634 ;;		On entry : 0/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   638 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   639 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   641 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   642 ;;Total ram usage:       14 bytes
   643 ;; Hardware stack levels used:    1
   644 ;; This function calls:
   645 ;;		Nothing
   646 ;; This function is called by:
   647 ;;		_uart_init
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           	psect	text6
   652  00FE02                     __ptext6:
   653                           	opt stack 0
   654  00FE02                     ___aldiv:
   655                           	opt stack 28
   656                           
   657                           ;incstack = 0
   658  00FE02  0E00               	movlw	0
   659  00FE04  6E0A               	movwf	___aldiv@sign,c
   660  00FE06  AE08               	btfss	___aldiv@divisor+3,7,c
   661  00FE08  D00A               	goto	l130
   662  00FE0A  1E08               	comf	___aldiv@divisor+3,f,c
   663  00FE0C  1E07               	comf	___aldiv@divisor+2,f,c
   664  00FE0E  1E06               	comf	___aldiv@divisor+1,f,c
   665  00FE10  6C05               	negf	___aldiv@divisor,c
   666  00FE12  0E00               	movlw	0
   667  00FE14  2206               	addwfc	___aldiv@divisor+1,f,c
   668  00FE16  2207               	addwfc	___aldiv@divisor+2,f,c
   669  00FE18  2208               	addwfc	___aldiv@divisor+3,f,c
   670  00FE1A  0E01               	movlw	1
   671  00FE1C  6E0A               	movwf	___aldiv@sign,c
   672  00FE1E                     l130:
   673  00FE1E  AE04               	btfss	___aldiv@dividend+3,7,c
   674  00FE20  D00A               	goto	l131
   675  00FE22  1E04               	comf	___aldiv@dividend+3,f,c
   676  00FE24  1E03               	comf	___aldiv@dividend+2,f,c
   677  00FE26  1E02               	comf	___aldiv@dividend+1,f,c
   678  00FE28  6C01               	negf	___aldiv@dividend,c
   679  00FE2A  0E00               	movlw	0
   680  00FE2C  2202               	addwfc	___aldiv@dividend+1,f,c
   681  00FE2E  2203               	addwfc	___aldiv@dividend+2,f,c
   682  00FE30  2204               	addwfc	___aldiv@dividend+3,f,c
   683  00FE32  0E01               	movlw	1
   684  00FE34  1A0A               	xorwf	___aldiv@sign,f,c
   685  00FE36                     l131:
   686  00FE36  0E00               	movlw	0
   687  00FE38  6E0B               	movwf	___aldiv@quotient,c
   688  00FE3A  0E00               	movlw	0
   689  00FE3C  6E0C               	movwf	___aldiv@quotient+1,c
   690  00FE3E  0E00               	movlw	0
   691  00FE40  6E0D               	movwf	___aldiv@quotient+2,c
   692  00FE42  0E00               	movlw	0
   693  00FE44  6E0E               	movwf	___aldiv@quotient+3,c
   694  00FE46  5005               	movf	___aldiv@divisor,w,c
   695  00FE48  1006               	iorwf	___aldiv@divisor+1,w,c
   696  00FE4A  1007               	iorwf	___aldiv@divisor+2,w,c
   697  00FE4C  1008               	iorwf	___aldiv@divisor+3,w,c
   698  00FE4E  B4D8               	btfsc	status,2,c
   699  00FE50  D02A               	goto	l138
   700  00FE52  0E01               	movlw	1
   701  00FE54  6E09               	movwf	___aldiv@counter,c
   702  00FE56  D006               	goto	l133
   703  00FE58  90D8               	bcf	status,0,c
   704  00FE5A  3605               	rlcf	___aldiv@divisor,f,c
   705  00FE5C  3606               	rlcf	___aldiv@divisor+1,f,c
   706  00FE5E  3607               	rlcf	___aldiv@divisor+2,f,c
   707  00FE60  3608               	rlcf	___aldiv@divisor+3,f,c
   708  00FE62  2A09               	incf	___aldiv@counter,f,c
   709  00FE64                     l133:
   710  00FE64  AE08               	btfss	___aldiv@divisor+3,7,c
   711  00FE66  D7F8               	goto	l134
   712  00FE68                     u200:
   713  00FE68  90D8               	bcf	status,0,c
   714  00FE6A  360B               	rlcf	___aldiv@quotient,f,c
   715  00FE6C  360C               	rlcf	___aldiv@quotient+1,f,c
   716  00FE6E  360D               	rlcf	___aldiv@quotient+2,f,c
   717  00FE70  360E               	rlcf	___aldiv@quotient+3,f,c
   718  00FE72  5005               	movf	___aldiv@divisor,w,c
   719  00FE74  5C01               	subwf	___aldiv@dividend,w,c
   720  00FE76  5006               	movf	___aldiv@divisor+1,w,c
   721  00FE78  5802               	subwfb	___aldiv@dividend+1,w,c
   722  00FE7A  5007               	movf	___aldiv@divisor+2,w,c
   723  00FE7C  5803               	subwfb	___aldiv@dividend+2,w,c
   724  00FE7E  5008               	movf	___aldiv@divisor+3,w,c
   725  00FE80  5804               	subwfb	___aldiv@dividend+3,w,c
   726  00FE82  A0D8               	btfss	status,0,c
   727  00FE84  D009               	goto	l137
   728  00FE86  5005               	movf	___aldiv@divisor,w,c
   729  00FE88  5E01               	subwf	___aldiv@dividend,f,c
   730  00FE8A  5006               	movf	___aldiv@divisor+1,w,c
   731  00FE8C  5A02               	subwfb	___aldiv@dividend+1,f,c
   732  00FE8E  5007               	movf	___aldiv@divisor+2,w,c
   733  00FE90  5A03               	subwfb	___aldiv@dividend+2,f,c
   734  00FE92  5008               	movf	___aldiv@divisor+3,w,c
   735  00FE94  5A04               	subwfb	___aldiv@dividend+3,f,c
   736  00FE96  800B               	bsf	___aldiv@quotient,0,c
   737  00FE98                     l137:
   738  00FE98  90D8               	bcf	status,0,c
   739  00FE9A  3208               	rrcf	___aldiv@divisor+3,f,c
   740  00FE9C  3207               	rrcf	___aldiv@divisor+2,f,c
   741  00FE9E  3206               	rrcf	___aldiv@divisor+1,f,c
   742  00FEA0  3205               	rrcf	___aldiv@divisor,f,c
   743  00FEA2  2E09               	decfsz	___aldiv@counter,f,c
   744  00FEA4  D7E1               	goto	u200
   745  00FEA6                     l138:
   746  00FEA6  500A               	movf	___aldiv@sign,w,c
   747  00FEA8  B4D8               	btfsc	status,2,c
   748  00FEAA  D008               	goto	l139
   749  00FEAC  1E0E               	comf	___aldiv@quotient+3,f,c
   750  00FEAE  1E0D               	comf	___aldiv@quotient+2,f,c
   751  00FEB0  1E0C               	comf	___aldiv@quotient+1,f,c
   752  00FEB2  6C0B               	negf	___aldiv@quotient,c
   753  00FEB4  0E00               	movlw	0
   754  00FEB6  220C               	addwfc	___aldiv@quotient+1,f,c
   755  00FEB8  220D               	addwfc	___aldiv@quotient+2,f,c
   756  00FEBA  220E               	addwfc	___aldiv@quotient+3,f,c
   757  00FEBC                     l139:
   758  00FEBC  C00B  F001         	movff	___aldiv@quotient,?___aldiv
   759  00FEC0  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
   760  00FEC4  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
   761  00FEC8  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
   762  00FECC  0012               	return	
   763  00FECE                     __end_of___aldiv:
   764                           	opt stack 0
   765                           wreg	equ	0xFE8
   766                           status	equ	0xFD8
   767                           
   768 ;; *************** function _port_init *****************
   769 ;; Defined at:
   770 ;;		line 68 in file "main.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;		None
   773 ;; Auto vars:     Size  Location     Type
   774 ;;		None
   775 ;; Return value:  Size  Location     Type
   776 ;;                  1    wreg      unsigned char 
   777 ;; Registers used:
   778 ;;		wreg, status,2
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   788 ;;Total ram usage:        0 bytes
   789 ;; Hardware stack levels used:    1
   790 ;; This function calls:
   791 ;;		Nothing
   792 ;; This function is called by:
   793 ;;		_init
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           	psect	text7
   798  00FD72                     __ptext7:
   799                           	opt stack 0
   800  00FD72                     _port_init:
   801                           	opt stack 29
   802                           
   803                           ;main.c: 69: TRISD = 0;
   804                           
   805                           ;incstack = 0
   806  00FD72  0E00               	movlw	0
   807  00FD74  6E95               	movwf	3989,c	;volatile
   808                           
   809                           ;main.c: 70: PORTD = 0;
   810  00FD76  0E00               	movlw	0
   811  00FD78  6E83               	movwf	3971,c	;volatile
   812                           
   813                           ;main.c: 71: return 1;
   814  00FD7A  0E01               	movlw	1
   815  00FD7C  0012               	return	
   816  00FD7E                     __end_of_port_init:
   817                           	opt stack 0
   818                           wreg	equ	0xFE8
   819                           status	equ	0xFD8
   820                           
   821 ;; *************** function _error *****************
   822 ;; Defined at:
   823 ;;		line 95 in file "main.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;		None
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      void 
   830 ;; Registers used:
   831 ;;		wreg, cstack
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   841 ;;Total ram usage:        0 bytes
   842 ;; Hardware stack levels used:    1
   843 ;; Hardware stack levels required when called:    1
   844 ;; This function calls:
   845 ;;		_blink
   846 ;;		_wait
   847 ;; This function is called by:
   848 ;;		_init
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           	psect	text8
   853  00FD7E                     __ptext8:
   854                           	opt stack 0
   855  00FD7E                     _error:
   856                           	opt stack 28
   857                           
   858                           ;main.c: 97: blink();
   859                           
   860                           ;incstack = 0
   861                           ;main.c: 96: for (;;) {
   862  00FD7E  ECC8  F07E         	call	_blink	;wreg free
   863                           
   864                           ;main.c: 98: blink();
   865  00FD82  ECC8  F07E         	call	_blink	;wreg free
   866                           
   867                           ;main.c: 99: blink();
   868  00FD86  ECC8  F07E         	call	_blink	;wreg free
   869                           
   870                           ;main.c: 100: wait();
   871  00FD8A  ECD2  F07E         	call	_wait	;wreg free
   872                           
   873                           ;main.c: 101: }
   874  00FD8E  D7F7               	goto	_error
   875  00FD90                     __end_of_error:
   876                           	opt stack 0
   877                           wreg	equ	0xFE8
   878                           status	equ	0xFD8
   879                           
   880 ;; *************** function _wait *****************
   881 ;; Defined at:
   882 ;;		line 91 in file "main.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;		None
   885 ;; Auto vars:     Size  Location     Type
   886 ;;		None
   887 ;; Return value:  Size  Location     Type
   888 ;;                  1    wreg      void 
   889 ;; Registers used:
   890 ;;		wreg
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   898 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   899 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   900 ;;Total ram usage:        2 bytes
   901 ;; Hardware stack levels used:    1
   902 ;; This function calls:
   903 ;;		Nothing
   904 ;; This function is called by:
   905 ;;		_error
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           	psect	text9
   910  00FDA4                     __ptext9:
   911                           	opt stack 0
   912  00FDA4                     _wait:
   913                           	opt stack 28
   914                           
   915                           ;main.c: 92: _delay((unsigned long)((1000)*(8000000/4000.0)));
   916                           
   917                           ;incstack = 0
   918  00FDA4  0E0B               	movlw	11
   919  00FDA6  6E02               	movwf	(??_wait+1)& (0+255),c
   920  00FDA8  0E26               	movlw	38
   921  00FDAA  6E01               	movwf	??_wait& (0+255),c
   922  00FDAC  0E5E               	movlw	94
   923  00FDAE                     u317:
   924  00FDAE  2EE8               	decfsz	wreg,f,c
   925  00FDB0  D7FE               	bra	u317
   926  00FDB2  2E01               	decfsz	??_wait& (0+255),f,c
   927  00FDB4  D7FC               	bra	u317
   928  00FDB6  2E02               	decfsz	(??_wait+1)& (0+255),f,c
   929  00FDB8  D7FA               	bra	u317
   930  00FDBA  0012               	return		;funcret
   931  00FDBC                     __end_of_wait:
   932                           	opt stack 0
   933                           wreg	equ	0xFE8
   934                           status	equ	0xFD8
   935                           
   936 ;; *************** function _blink *****************
   937 ;; Defined at:
   938 ;;		line 85 in file "main.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;		None
   941 ;; Auto vars:     Size  Location     Type
   942 ;;		None
   943 ;; Return value:  Size  Location     Type
   944 ;;                  1    wreg      void 
   945 ;; Registers used:
   946 ;;		wreg
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   954 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   956 ;;Total ram usage:        1 bytes
   957 ;; Hardware stack levels used:    1
   958 ;; This function calls:
   959 ;;		Nothing
   960 ;; This function is called by:
   961 ;;		_error
   962 ;;		_loop
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           	psect	text10
   967  00FD90                     __ptext10:
   968                           	opt stack 0
   969  00FD90                     _blink:
   970                           	opt stack 29
   971                           
   972                           ;main.c: 86: PORTDbits.RD1 = 1;
   973                           
   974                           ;incstack = 0
   975  00FD90  8283               	bsf	3971,1,c	;volatile
   976                           
   977                           ;main.c: 87: _delay((unsigned long)((1)*(8000000/4000.0)));
   978  00FD92  0E03               	movlw	3
   979  00FD94  6E01               	movwf	??_blink& (0+255),c
   980  00FD96  0E98               	movlw	152
   981  00FD98                     u327:
   982  00FD98  2EE8               	decfsz	wreg,f,c
   983  00FD9A  D7FE               	bra	u327
   984  00FD9C  2E01               	decfsz	??_blink& (0+255),f,c
   985  00FD9E  D7FC               	bra	u327
   986                           
   987                           ;main.c: 88: PORTDbits.RD1 = 0;
   988  00FDA0  9283               	bcf	3971,1,c	;volatile
   989  00FDA2  0012               	return		;funcret
   990  00FDA4                     __end_of_blink:
   991                           	opt stack 0
   992  0000                     wreg	equ	0xFE8
   993                           status	equ	0xFD8
   994                           wreg	equ	0xFE8
   995                           status	equ	0xFD8
   996                           
   997                           	psect	rparam
   998  0000                     wreg	equ	0xFE8
   999                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     28      28
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _loop->_blink
    _init->_uart_init
    _uart_init->___aldiv
    _error->_wait

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     836
                               _init
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 1     1      0       0
                                              1 COMRAM     1     1      0
                              _blink
                    _uart_data_ready
                          _uart_read
 ---------------------------------------------------------------------------------
 (2) _uart_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _uart_data_ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     836
                              _error
                          _port_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (2) _uart_init                                           14    10      4     836
                                             14 COMRAM    14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _error                                                0     0      0       0
                              _blink
                               _wait
 ---------------------------------------------------------------------------------
 (3) _wait                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _blink                                                1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _error
       _blink
       _wait
     _port_init
     _uart_init
       ___aldiv
   _loop
     _blink
     _uart_data_ready
     _uart_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     1C      1C       1       22.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
ABS                  0      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BIGRAM             F7F      0       0      37        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Jan 15 10:37:32 2018

       ??_uart_data_ready 0001                        l33 FFE2                        l34 FFFC  
                      l72 FD6C               __CFG_OSC$HS 000000                       l130 FE1E  
                     l131 FE36                       l133 FE64                       l134 FE58  
                     l137 FE98                       l138 FEA6                       l139 FEBC  
                     u200 FE68                       u235 FEE0                       u317 FDAE  
                     u245 FF2A                       u327 FD98                       u265 FF6C  
                     u275 FFB6                       wreg 000FE8              __CFG_LVP$OFF 000000  
            __CFG_WDT$OFF 000000                      _BRGH 007D62                      _CREN 007D5C  
                    _RCIF 007CF5                      _SPEN 007D5F                      _TXEN 007D65  
                    _SYNC 007D64                      _main FD68                      _init FDD6  
                    _loop FDBC                      _wait FDA4                      start 0000  
            ___param_bank 000000           __end_of___aldiv FECE                     ?_main 0001  
                   ?_init 0001                     ?_loop 0001                     ?_wait 0001  
          __CFG_DEBUG$OFF 000000                     _RCREG 000FAE                     _SPBRG 000FAF  
                   _PORTD 000F83                     _TRISD 000F95             __CFG_PWRT$OFF 000000  
                   _blink FD90                     _error FD7E            __CFG_BOREN$OFF 000000  
                   loop@b 0002                     status 000FD8            __CFG_MCLRE$OFF 000000  
         __initialization FD52              __end_of_main FD72              __end_of_init FE02  
            __end_of_loop FDD6              __end_of_wait FDBC                    ??_main 001D  
                  ??_init 001D                    ??_loop 0002                    ??_wait 0001  
           __activetblptr 000000                    ?_blink 0001                    ?_error 0001  
                  _TRISC6 007CA6                    _TRISC7 007CA7                 ??___aldiv 0009  
         _uart_data_ready FD58                __accesstop 0080   __end_of__initialization FD52  
         __CFG_PBADEN$OFF 000000             ___rparam_used 000001            __pcstackCOMRAM 0001  
           __end_of_blink FDA4             __end_of_error FD90                   ??_blink 0001  
                 ??_error 0003        __size_of_uart_init 0132        __size_of_uart_read 0008  
      __size_of_port_init 000C   __end_of_uart_data_ready FD60                   __Hparam 0000  
                 __Lparam 0000                   ___aldiv FE02                   __pcinit FD52  
                 __ramtop 1000                   __ptext0 FD68                   __ptext1 FDBC  
                 __ptext2 FD60                   __ptext3 FD58                   __ptext4 FDD6  
                 __ptext5 FECE                   __ptext6 FE02                   __ptext7 FD72  
                 __ptext8 FD7E                   __ptext9 FDA4          ___aldiv@dividend 0001  
    end_of_initialization FD52         __end_of_uart_init 0000         __end_of_uart_read FD68  
       __end_of_port_init FD7E          ___aldiv@quotient 000B                 _PORTDbits 000F83  
        ?_uart_data_ready 0001       start_initialization FD52                  ?___aldiv 0001  
          __size_of_blink 0014            __size_of_error 0012           ___aldiv@divisor 0005  
         ___aldiv@counter 0009                 _uart_init FECE                 _uart_read FD60  
              uart_init@x 001B                 _port_init FD72                  __Hrparam 0000  
                __Lrparam 0000                ?_uart_init 000F                ?_uart_read 0001  
        __size_of___aldiv 00CC                ?_port_init 0001                  __ptext10 FD90  
           __size_of_main 000A             __size_of_init 002C             __size_of_loop 001A  
           __size_of_wait 0018  __size_of_uart_data_ready 0008         uart_init@baudrate 000F  
             ??_uart_init 0013               ??_uart_read 0001               ??_port_init 0001  
            ___aldiv@sign 000A  
