

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Jan 15 22:43:00 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19  0000                     
    20                           ; Version 1.45
    21                           ; Generated 16/11/2017 GMT
    22                           ; 
    23                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4620 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     
    55                           	psect	mediumconst
    56  00FEFE                     __pmediumconst:
    57                           	opt stack 0
    58  00FEFE  00                 	db	0
    59  00FEFF                     _MIDI_NOTE_FREQUENCY_TABLE:
    60                           	opt stack 0
    61  00FEFF  0008               	dw	8
    62  00FF01  0009               	dw	9
    63  00FF03  0009               	dw	9
    64  00FF05  000A               	dw	10
    65  00FF07  000A               	dw	10
    66  00FF09  000B               	dw	11
    67  00FF0B  000C               	dw	12
    68  00FF0D  000C               	dw	12
    69  00FF0F  000D               	dw	13
    70  00FF11  000E               	dw	14
    71  00FF13  000F               	dw	15
    72  00FF15  000F               	dw	15
    73  00FF17  0010               	dw	16
    74  00FF19  0011               	dw	17
    75  00FF1B  0012               	dw	18
    76  00FF1D  0013               	dw	19
    77  00FF1F  0015               	dw	21
    78  00FF21  0016               	dw	22
    79  00FF23  0017               	dw	23
    80  00FF25  0018               	dw	24
    81  00FF27  001A               	dw	26
    82  00FF29  001C               	dw	28
    83  00FF2B  001D               	dw	29
    84  00FF2D  001F               	dw	31
    85  00FF2F  0021               	dw	33
    86  00FF31  0023               	dw	35
    87  00FF33  0025               	dw	37
    88  00FF35  0027               	dw	39
    89  00FF37  0029               	dw	41
    90  00FF39  002C               	dw	44
    91  00FF3B  002E               	dw	46
    92  00FF3D  0031               	dw	49
    93  00FF3F  0034               	dw	52
    94  00FF41  0037               	dw	55
    95  00FF43  003A               	dw	58
    96  00FF45  003E               	dw	62
    97  00FF47  0041               	dw	65
    98  00FF49  0045               	dw	69
    99  00FF4B  0049               	dw	73
   100  00FF4D  004E               	dw	78
   101  00FF4F  0052               	dw	82
   102  00FF51  0057               	dw	87
   103  00FF53  005C               	dw	92
   104  00FF55  0062               	dw	98
   105  00FF57  0068               	dw	104
   106  00FF59  006E               	dw	110
   107  00FF5B  0075               	dw	117
   108  00FF5D  007B               	dw	123
   109  00FF5F  0083               	dw	131
   110  00FF61  008B               	dw	139
   111  00FF63  0093               	dw	147
   112  00FF65  009C               	dw	156
   113  00FF67  00A5               	dw	165
   114  00FF69  00AF               	dw	175
   115  00FF6B  00B9               	dw	185
   116  00FF6D  00C4               	dw	196
   117  00FF6F  00D0               	dw	208
   118  00FF71  00DC               	dw	220
   119  00FF73  00E9               	dw	233
   120  00FF75  00F7               	dw	247
   121  00FF77  0106               	dw	262
   122  00FF79  0115               	dw	277
   123  00FF7B  0126               	dw	294
   124  00FF7D  0137               	dw	311
   125  00FF7F  014A               	dw	330
   126  00FF81  015D               	dw	349
   127  00FF83  0172               	dw	370
   128  00FF85  0188               	dw	392
   129  00FF87  019F               	dw	415
   130  00FF89  01B8               	dw	440
   131  00FF8B  01D2               	dw	466
   132  00FF8D  01EE               	dw	494
   133  00FF8F  020B               	dw	523
   134  00FF91  022A               	dw	554
   135  00FF93  024B               	dw	587
   136  00FF95  026E               	dw	622
   137  00FF97  0293               	dw	659
   138  00FF99  02BA               	dw	698
   139  00FF9B  02E4               	dw	740
   140  00FF9D  0310               	dw	784
   141  00FF9F  033F               	dw	831
   142  00FFA1  0370               	dw	880
   143  00FFA3  03A4               	dw	932
   144  00FFA5  03DC               	dw	988
   145  00FFA7  0417               	dw	1047
   146  00FFA9  0455               	dw	1109
   147  00FFAB  0497               	dw	1175
   148  00FFAD  04DD               	dw	1245
   149  00FFAF  0527               	dw	1319
   150  00FFB1  0575               	dw	1397
   151  00FFB3  05C8               	dw	1480
   152  00FFB5  0620               	dw	1568
   153  00FFB7  067D               	dw	1661
   154  00FFB9  06E0               	dw	1760
   155  00FFBB  0749               	dw	1865
   156  00FFBD  07B8               	dw	1976
   157  00FFBF  082D               	dw	2093
   158  00FFC1  08A9               	dw	2217
   159  00FFC3  092D               	dw	2349
   160  00FFC5  09B9               	dw	2489
   161  00FFC7  0A4D               	dw	2637
   162  00FFC9  0AEA               	dw	2794
   163  00FFCB  0B90               	dw	2960
   164  00FFCD  0C40               	dw	3136
   165  00FFCF  0CFA               	dw	3322
   166  00FFD1  0DC0               	dw	3520
   167  00FFD3  0E91               	dw	3729
   168  00FFD5  0F6F               	dw	3951
   169  00FFD7  105A               	dw	4186
   170  00FFD9  1153               	dw	4435
   171  00FFDB  125B               	dw	4699
   172  00FFDD  1372               	dw	4978
   173  00FFDF  149A               	dw	5274
   174  00FFE1  15D4               	dw	5588
   175  00FFE3  1720               	dw	5920
   176  00FFE5  1880               	dw	6272
   177  00FFE7  19F5               	dw	6645
   178  00FFE9  1B80               	dw	7040
   179  00FFEB  1D23               	dw	7459
   180  00FFED  1EDE               	dw	7902
   181  00FFEF  20B4               	dw	8372
   182  00FFF1  22A6               	dw	8870
   183  00FFF3  24B5               	dw	9397
   184  00FFF5  26E4               	dw	9956
   185  00FFF7  2934               	dw	10548
   186  00FFF9  2BA7               	dw	11175
   187  00FFFB  2E40               	dw	11840
   188  00FFFD  3100               	dw	12544
   189  00FFFF                     __end_of_MIDI_NOTE_FREQUENCY_TABLE:
   190                           	opt stack 0
   191  0000                     _PORTDbits	set	3971
   192  0000                     _PORTD	set	3971
   193  0000                     _TRISD	set	3989
   194  0000                     _RCREG	set	4014
   195  0000                     _SPBRG	set	4015
   196  0000                     _RCIF	set	31989
   197  0000                     _TXEN	set	32101
   198  0000                     _CREN	set	32092
   199  0000                     _TRISC6	set	31910
   200  0000                     _TRISC7	set	31911
   201  0000                     _SPEN	set	32095
   202  0000                     _SYNC	set	32100
   203  0000                     _BRGH	set	32098
   204                           
   205                           ; #config settings
   206  00FFFF  00                 	db	0	; dummy byte at the end
   207  0000                     
   208                           	psect	cinit
   209  00FC6A                     __pcinit:
   210                           	opt stack 0
   211  00FC6A                     start_initialization:
   212                           	opt stack 0
   213  00FC6A                     __initialization:
   214                           	opt stack 0
   215  00FC6A                     end_of_initialization:
   216                           	opt stack 0
   217  00FC6A                     __end_of__initialization:
   218                           	opt stack 0
   219  00FC6A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   220  00FC6C  6EF8               	movwf	tblptru,c
   221  00FC6E  0100               	movlb	0
   222  00FC70  EF6B  F07E         	goto	_main	;jump to C main() function
   223                           tblptru	equ	0xFF8
   224                           
   225                           	psect	cstackCOMRAM
   226  000001                     __pcstackCOMRAM:
   227                           	opt stack 0
   228  000001                     ??_blink:
   229  000001                     ?___aldiv:
   230                           	opt stack 0
   231  000001                     ___aldiv@dividend:
   232                           	opt stack 0
   233                           
   234                           ; 4 bytes @ 0x0
   235  000001                     	ds	1
   236  000002                     loop@b:
   237                           	opt stack 0
   238                           
   239                           ; 1 bytes @ 0x1
   240  000002                     	ds	3
   241  000005                     ___aldiv@divisor:
   242                           	opt stack 0
   243                           
   244                           ; 4 bytes @ 0x4
   245  000005                     	ds	4
   246  000009                     ___aldiv@counter:
   247                           	opt stack 0
   248                           
   249                           ; 1 bytes @ 0x8
   250  000009                     	ds	1
   251  00000A                     ___aldiv@sign:
   252                           	opt stack 0
   253                           
   254                           ; 1 bytes @ 0x9
   255  00000A                     	ds	1
   256  00000B                     ___aldiv@quotient:
   257                           	opt stack 0
   258                           
   259                           ; 4 bytes @ 0xA
   260  00000B                     	ds	4
   261  00000F                     uart_init@baudrate:
   262                           	opt stack 0
   263                           
   264                           ; 4 bytes @ 0xE
   265  00000F                     	ds	4
   266  000013                     ??_uart_init:
   267                           
   268                           ; 1 bytes @ 0x12
   269  000013                     	ds	8
   270  00001B                     uart_init@x:
   271                           	opt stack 0
   272                           
   273                           ; 2 bytes @ 0x1A
   274  00001B                     	ds	2
   275  00001D                     system_init@baudrate:
   276                           	opt stack 0
   277                           
   278                           ; 4 bytes @ 0x1C
   279  00001D                     	ds	4
   280  000021                     system_init@status:
   281                           	opt stack 0
   282                           
   283                           ; 1 bytes @ 0x20
   284  000021                     	ds	1
   285  000022                     main@MIDI_BAUD_RATE:
   286                           	opt stack 0
   287                           
   288                           ; 4 bytes @ 0x21
   289  000022                     	ds	4
   290                           tblptru	equ	0xFF8
   291                           
   292 ;;
   293 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   294 ;;
   295 ;; *************** function _main *****************
   296 ;; Defined at:
   297 ;;		line 227 in file "main.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;		None
   300 ;; Auto vars:     Size  Location     Type
   301 ;;  MIDI_BAUD_RA    4   33[COMRAM] const long 
   302 ;; Return value:  Size  Location     Type
   303 ;;                  1    wreg      void 
   304 ;; Registers used:
   305 ;;		wreg, status,2, status,0, cstack
   306 ;; Tracked objects:
   307 ;;		On entry : 0/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   312 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   314 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   315 ;;Total ram usage:        4 bytes
   316 ;; Hardware stack levels required when called:    3
   317 ;; This function calls:
   318 ;;		_loop
   319 ;;		_system_init
   320 ;; This function is called by:
   321 ;;		Startup code after reset
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325                           	psect	text0
   326  00FCD6                     __ptext0:
   327                           	opt stack 0
   328  00FCD6                     _main:
   329                           	opt stack 28
   330                           
   331                           ;main.c: 228: const long MIDI_BAUD_RATE = 31250;
   332                           
   333                           ;incstack = 0
   334  00FCD6  0E12               	movlw	18
   335  00FCD8  6E22               	movwf	main@MIDI_BAUD_RATE,c
   336  00FCDA  0E7A               	movlw	122
   337  00FCDC  6E23               	movwf	main@MIDI_BAUD_RATE+1,c
   338  00FCDE  0E00               	movlw	0
   339  00FCE0  6E24               	movwf	main@MIDI_BAUD_RATE+2,c
   340  00FCE2  0E00               	movlw	0
   341  00FCE4  6E25               	movwf	main@MIDI_BAUD_RATE+3,c
   342                           
   343                           ;main.c: 230: system_init(MIDI_BAUD_RATE);
   344  00FCE6  C022  F01D         	movff	main@MIDI_BAUD_RATE,system_init@baudrate
   345  00FCEA  C023  F01E         	movff	main@MIDI_BAUD_RATE+1,system_init@baudrate+1
   346  00FCEE  C024  F01F         	movff	main@MIDI_BAUD_RATE+2,system_init@baudrate+2
   347  00FCF2  C025  F020         	movff	main@MIDI_BAUD_RATE+3,system_init@baudrate+3
   348  00FCF6  EC57  F07E         	call	_system_init	;wreg free
   349  00FCFA                     
   350                           ;main.c: 233: loop();
   351  00FCFA  EC4A  F07E         	call	_loop	;wreg free
   352                           
   353                           ;main.c: 234: }
   354  00FCFE  D7FD               	goto	l70
   355  00FD00                     __end_of_main:
   356                           	opt stack 0
   357                           tblptru	equ	0xFF8
   358                           
   359 ;; *************** function _system_init *****************
   360 ;; Defined at:
   361 ;;		line 170 in file "main.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;  baudrate        4   28[COMRAM] long 
   364 ;; Auto vars:     Size  Location     Type
   365 ;;  status          1   32[COMRAM] unsigned char 
   366 ;; Return value:  Size  Location     Type
   367 ;;                  1    wreg      unsigned char 
   368 ;; Registers used:
   369 ;;		wreg, status,2, status,0, cstack
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   375 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   376 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   378 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   379 ;;Total ram usage:        5 bytes
   380 ;; Hardware stack levels used:    1
   381 ;; Hardware stack levels required when called:    2
   382 ;; This function calls:
   383 ;;		_port_init
   384 ;;		_uart_init
   385 ;; This function is called by:
   386 ;;		_main
   387 ;; This function uses a non-reentrant model
   388 ;;
   389                           
   390                           	psect	text1
   391  00FCAE                     __ptext1:
   392                           	opt stack 0
   393  00FCAE                     _system_init:
   394                           	opt stack 28
   395                           
   396                           ;main.c: 171: char status = 0;
   397                           
   398                           ;incstack = 0
   399  00FCAE  0E00               	movlw	0
   400  00FCB0  6E21               	movwf	system_init@status,c
   401                           
   402                           ;main.c: 173: status = port_init();
   403  00FCB2  EC3A  F07E         	call	_port_init	;wreg free
   404  00FCB6  6E21               	movwf	system_init@status,c
   405                           
   406                           ;main.c: 174: if (!status) {
   407  00FCB8  5021               	movf	system_init@status,w,c
   408  00FCBA  B4D8               	btfsc	status,2,c
   409  00FCBC  0012               	return	
   410                           
   411                           ;main.c: 176: }
   412                           ;main.c: 178: status = uart_init(baudrate);
   413                           
   414                           ;main.c: 175: return status;
   415                           ;	Return value of _system_init is never used
   416  00FCBE  C01D  F00F         	movff	system_init@baudrate,uart_init@baudrate
   417  00FCC2  C01E  F010         	movff	system_init@baudrate+1,uart_init@baudrate+1
   418  00FCC6  C01F  F011         	movff	system_init@baudrate+2,uart_init@baudrate+2
   419  00FCCA  C020  F012         	movff	system_init@baudrate+3,uart_init@baudrate+3
   420  00FCCE  ECE6  F07E         	call	_uart_init	;wreg free
   421  00FCD2  6E21               	movwf	system_init@status,c
   422                           
   423                           ;main.c: 180: return status;
   424                           ;	Return value of _system_init is never used
   425  00FCD4  0012               	return	
   426  00FCD6                     __end_of_system_init:
   427                           	opt stack 0
   428                           tblptru	equ	0xFF8
   429                           status	equ	0xFD8
   430                           
   431 ;; *************** function _uart_init *****************
   432 ;; Defined at:
   433 ;;		line 78 in file "main.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;  baudrate        4   14[COMRAM] long 
   436 ;; Auto vars:     Size  Location     Type
   437 ;;  x               2   26[COMRAM] unsigned int 
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      unsigned char 
   440 ;; Registers used:
   441 ;;		wreg, status,2, status,0, cstack
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   447 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   448 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   449 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   450 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   451 ;;Total ram usage:       14 bytes
   452 ;; Hardware stack levels used:    1
   453 ;; Hardware stack levels required when called:    1
   454 ;; This function calls:
   455 ;;		___aldiv
   456 ;; This function is called by:
   457 ;;		_system_init
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461                           	psect	text2
   462  00FDCC                     __ptext2:
   463                           	opt stack 0
   464  00FDCC                     _uart_init:
   465                           	opt stack 28
   466                           
   467                           ;main.c: 79: unsigned int x;
   468                           ;main.c: 80: x = (8000000 - (baudrate * 64)) / (baudrate * 64);
   469                           
   470                           ;incstack = 0
   471  00FDCC  C00F  F013         	movff	uart_init@baudrate,??_uart_init
   472  00FDD0  C010  F014         	movff	uart_init@baudrate+1,??_uart_init+1
   473  00FDD4  C011  F015         	movff	uart_init@baudrate+2,??_uart_init+2
   474  00FDD8  C012  F016         	movff	uart_init@baudrate+3,??_uart_init+3
   475  00FDDC  0E06               	movlw	6
   476  00FDDE                     u225:
   477  00FDDE  90D8               	bcf	status,0,c
   478  00FDE0  3613               	rlcf	??_uart_init,f,c
   479  00FDE2  3614               	rlcf	??_uart_init+1,f,c
   480  00FDE4  3615               	rlcf	??_uart_init+2,f,c
   481  00FDE6  3616               	rlcf	??_uart_init+3,f,c
   482  00FDE8  2EE8               	decfsz	wreg,f,c
   483  00FDEA  D7F9               	goto	u225
   484  00FDEC  1E13               	comf	??_uart_init,f,c
   485  00FDEE  1E14               	comf	??_uart_init+1,f,c
   486  00FDF0  1E15               	comf	??_uart_init+2,f,c
   487  00FDF2  1E16               	comf	??_uart_init+3,f,c
   488  00FDF4  2A13               	incf	??_uart_init,f,c
   489  00FDF6  0E00               	movlw	0
   490  00FDF8  2214               	addwfc	??_uart_init+1,f,c
   491  00FDFA  2215               	addwfc	??_uart_init+2,f,c
   492  00FDFC  2216               	addwfc	??_uart_init+3,f,c
   493  00FDFE  0E00               	movlw	0
   494  00FE00  2413               	addwf	??_uart_init,w,c
   495  00FE02  6E01               	movwf	___aldiv@dividend,c
   496  00FE04  0E12               	movlw	18
   497  00FE06  2014               	addwfc	??_uart_init+1,w,c
   498  00FE08  6E02               	movwf	___aldiv@dividend+1,c
   499  00FE0A  0E7A               	movlw	122
   500  00FE0C  2015               	addwfc	??_uart_init+2,w,c
   501  00FE0E  6E03               	movwf	___aldiv@dividend+2,c
   502  00FE10  0E00               	movlw	0
   503  00FE12  2016               	addwfc	??_uart_init+3,w,c
   504  00FE14  6E04               	movwf	___aldiv@dividend+3,c
   505  00FE16  C00F  F017         	movff	uart_init@baudrate,??_uart_init+4
   506  00FE1A  C010  F018         	movff	uart_init@baudrate+1,??_uart_init+5
   507  00FE1E  C011  F019         	movff	uart_init@baudrate+2,??_uart_init+6
   508  00FE22  C012  F01A         	movff	uart_init@baudrate+3,??_uart_init+7
   509  00FE26  0E06               	movlw	6
   510  00FE28                     u235:
   511  00FE28  90D8               	bcf	status,0,c
   512  00FE2A  3617               	rlcf	??_uart_init+4,f,c
   513  00FE2C  3618               	rlcf	??_uart_init+5,f,c
   514  00FE2E  3619               	rlcf	??_uart_init+6,f,c
   515  00FE30  361A               	rlcf	??_uart_init+7,f,c
   516  00FE32  2EE8               	decfsz	wreg,f,c
   517  00FE34  D7F9               	goto	u235
   518  00FE36  C017  F005         	movff	??_uart_init+4,___aldiv@divisor
   519  00FE3A  C018  F006         	movff	??_uart_init+5,___aldiv@divisor+1
   520  00FE3E  C019  F007         	movff	??_uart_init+6,___aldiv@divisor+2
   521  00FE42  C01A  F008         	movff	??_uart_init+7,___aldiv@divisor+3
   522  00FE46  EC80  F07E         	call	___aldiv	;wreg free
   523  00FE4A  C001  F01B         	movff	?___aldiv,uart_init@x
   524  00FE4E  C002  F01C         	movff	?___aldiv+1,uart_init@x+1
   525                           
   526                           ;main.c: 81: if (x > 255) {
   527  00FE52  041C               	decf	uart_init@x+1,w,c
   528  00FE54  A0D8               	btfss	status,0,c
   529  00FE56  D044               	goto	l31
   530                           
   531                           ;main.c: 82: x = (8000000 - (baudrate * 16)) / (baudrate * 16);
   532  00FE58  C00F  F013         	movff	uart_init@baudrate,??_uart_init
   533  00FE5C  C010  F014         	movff	uart_init@baudrate+1,??_uart_init+1
   534  00FE60  C011  F015         	movff	uart_init@baudrate+2,??_uart_init+2
   535  00FE64  C012  F016         	movff	uart_init@baudrate+3,??_uart_init+3
   536  00FE68  0E04               	movlw	4
   537  00FE6A                     u255:
   538  00FE6A  90D8               	bcf	status,0,c
   539  00FE6C  3613               	rlcf	??_uart_init,f,c
   540  00FE6E  3614               	rlcf	??_uart_init+1,f,c
   541  00FE70  3615               	rlcf	??_uart_init+2,f,c
   542  00FE72  3616               	rlcf	??_uart_init+3,f,c
   543  00FE74  2EE8               	decfsz	wreg,f,c
   544  00FE76  D7F9               	goto	u255
   545  00FE78  1E13               	comf	??_uart_init,f,c
   546  00FE7A  1E14               	comf	??_uart_init+1,f,c
   547  00FE7C  1E15               	comf	??_uart_init+2,f,c
   548  00FE7E  1E16               	comf	??_uart_init+3,f,c
   549  00FE80  2A13               	incf	??_uart_init,f,c
   550  00FE82  0E00               	movlw	0
   551  00FE84  2214               	addwfc	??_uart_init+1,f,c
   552  00FE86  2215               	addwfc	??_uart_init+2,f,c
   553  00FE88  2216               	addwfc	??_uart_init+3,f,c
   554  00FE8A  0E00               	movlw	0
   555  00FE8C  2413               	addwf	??_uart_init,w,c
   556  00FE8E  6E01               	movwf	___aldiv@dividend,c
   557  00FE90  0E12               	movlw	18
   558  00FE92  2014               	addwfc	??_uart_init+1,w,c
   559  00FE94  6E02               	movwf	___aldiv@dividend+1,c
   560  00FE96  0E7A               	movlw	122
   561  00FE98  2015               	addwfc	??_uart_init+2,w,c
   562  00FE9A  6E03               	movwf	___aldiv@dividend+2,c
   563  00FE9C  0E00               	movlw	0
   564  00FE9E  2016               	addwfc	??_uart_init+3,w,c
   565  00FEA0  6E04               	movwf	___aldiv@dividend+3,c
   566  00FEA2  C00F  F017         	movff	uart_init@baudrate,??_uart_init+4
   567  00FEA6  C010  F018         	movff	uart_init@baudrate+1,??_uart_init+5
   568  00FEAA  C011  F019         	movff	uart_init@baudrate+2,??_uart_init+6
   569  00FEAE  C012  F01A         	movff	uart_init@baudrate+3,??_uart_init+7
   570  00FEB2  0E04               	movlw	4
   571  00FEB4                     u265:
   572  00FEB4  90D8               	bcf	status,0,c
   573  00FEB6  3617               	rlcf	??_uart_init+4,f,c
   574  00FEB8  3618               	rlcf	??_uart_init+5,f,c
   575  00FEBA  3619               	rlcf	??_uart_init+6,f,c
   576  00FEBC  361A               	rlcf	??_uart_init+7,f,c
   577  00FEBE  2EE8               	decfsz	wreg,f,c
   578  00FEC0  D7F9               	goto	u265
   579  00FEC2  C017  F005         	movff	??_uart_init+4,___aldiv@divisor
   580  00FEC6  C018  F006         	movff	??_uart_init+5,___aldiv@divisor+1
   581  00FECA  C019  F007         	movff	??_uart_init+6,___aldiv@divisor+2
   582  00FECE  C01A  F008         	movff	??_uart_init+7,___aldiv@divisor+3
   583  00FED2  EC80  F07E         	call	___aldiv	;wreg free
   584  00FED6  C001  F01B         	movff	?___aldiv,uart_init@x
   585  00FEDA  C002  F01C         	movff	?___aldiv+1,uart_init@x+1
   586                           
   587                           ;main.c: 83: BRGH = 1;
   588  00FEDE  84AC               	bsf	4012,2,c	;volatile
   589  00FEE0                     l31:
   590                           
   591                           ;main.c: 84: }
   592                           ;main.c: 86: if (x < 256) {
   593  00FEE0  041C               	decf	uart_init@x+1,w,c
   594  00FEE2  B0D8               	btfsc	status,0,c
   595  00FEE4  D00A               	goto	l32
   596                           
   597                           ;main.c: 87: SPBRG = x;
   598  00FEE6  C01B  FFAF         	movff	uart_init@x,4015	;volatile
   599                           
   600                           ;main.c: 88: SYNC = 0;
   601  00FEEA  98AC               	bcf	4012,4,c	;volatile
   602                           
   603                           ;main.c: 89: SPEN = 1;
   604  00FEEC  8EAB               	bsf	4011,7,c	;volatile
   605                           
   606                           ;main.c: 90: TRISC7 = 1;
   607  00FEEE  8E94               	bsf	3988,7,c	;volatile
   608                           
   609                           ;main.c: 91: TRISC6 = 1;
   610  00FEF0  8C94               	bsf	3988,6,c	;volatile
   611                           
   612                           ;main.c: 92: CREN = 1;
   613  00FEF2  88AB               	bsf	4011,4,c	;volatile
   614                           
   615                           ;main.c: 93: TXEN = 1;
   616  00FEF4  8AAC               	bsf	4012,5,c	;volatile
   617                           
   618                           ;main.c: 94: return 1;
   619  00FEF6  0E01               	movlw	1
   620  00FEF8  0012               	return	
   621  00FEFA                     l32:
   622                           
   623                           ;main.c: 95: }
   624                           ;main.c: 96: return 0;
   625  00FEFA  0E00               	movlw	0
   626  00FEFC  0012               	return	
   627  00FEFE                     __end_of_uart_init:
   628                           	opt stack 0
   629                           tblptru	equ	0xFF8
   630                           wreg	equ	0xFE8
   631                           status	equ	0xFD8
   632                           
   633 ;; *************** function ___aldiv *****************
   634 ;; Defined at:
   635 ;;		line 8 in file "/Applications/microchip/xc8/v1.45/sources/common/aldiv.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;  dividend        4    0[COMRAM] long 
   638 ;;  divisor         4    4[COMRAM] long 
   639 ;; Auto vars:     Size  Location     Type
   640 ;;  quotient        4   10[COMRAM] long 
   641 ;;  sign            1    9[COMRAM] unsigned char 
   642 ;;  counter         1    8[COMRAM] unsigned char 
   643 ;; Return value:  Size  Location     Type
   644 ;;                  4    0[COMRAM] long 
   645 ;; Registers used:
   646 ;;		wreg, status,2, status,0
   647 ;; Tracked objects:
   648 ;;		On entry : 0/0
   649 ;;		On exit  : 0/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   652 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   653 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   655 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   656 ;;Total ram usage:       14 bytes
   657 ;; Hardware stack levels used:    1
   658 ;; This function calls:
   659 ;;		Nothing
   660 ;; This function is called by:
   661 ;;		_uart_init
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665                           	psect	text3
   666  00FD00                     __ptext3:
   667                           	opt stack 0
   668  00FD00                     ___aldiv:
   669                           	opt stack 28
   670                           
   671                           ;incstack = 0
   672  00FD00  0E00               	movlw	0
   673  00FD02  6E0A               	movwf	___aldiv@sign,c
   674  00FD04  AE08               	btfss	___aldiv@divisor+3,7,c
   675  00FD06  D00A               	goto	l130
   676  00FD08  1E08               	comf	___aldiv@divisor+3,f,c
   677  00FD0A  1E07               	comf	___aldiv@divisor+2,f,c
   678  00FD0C  1E06               	comf	___aldiv@divisor+1,f,c
   679  00FD0E  6C05               	negf	___aldiv@divisor,c
   680  00FD10  0E00               	movlw	0
   681  00FD12  2206               	addwfc	___aldiv@divisor+1,f,c
   682  00FD14  2207               	addwfc	___aldiv@divisor+2,f,c
   683  00FD16  2208               	addwfc	___aldiv@divisor+3,f,c
   684  00FD18  0E01               	movlw	1
   685  00FD1A  6E0A               	movwf	___aldiv@sign,c
   686  00FD1C                     l130:
   687  00FD1C  AE04               	btfss	___aldiv@dividend+3,7,c
   688  00FD1E  D00A               	goto	l131
   689  00FD20  1E04               	comf	___aldiv@dividend+3,f,c
   690  00FD22  1E03               	comf	___aldiv@dividend+2,f,c
   691  00FD24  1E02               	comf	___aldiv@dividend+1,f,c
   692  00FD26  6C01               	negf	___aldiv@dividend,c
   693  00FD28  0E00               	movlw	0
   694  00FD2A  2202               	addwfc	___aldiv@dividend+1,f,c
   695  00FD2C  2203               	addwfc	___aldiv@dividend+2,f,c
   696  00FD2E  2204               	addwfc	___aldiv@dividend+3,f,c
   697  00FD30  0E01               	movlw	1
   698  00FD32  1A0A               	xorwf	___aldiv@sign,f,c
   699  00FD34                     l131:
   700  00FD34  0E00               	movlw	0
   701  00FD36  6E0B               	movwf	___aldiv@quotient,c
   702  00FD38  0E00               	movlw	0
   703  00FD3A  6E0C               	movwf	___aldiv@quotient+1,c
   704  00FD3C  0E00               	movlw	0
   705  00FD3E  6E0D               	movwf	___aldiv@quotient+2,c
   706  00FD40  0E00               	movlw	0
   707  00FD42  6E0E               	movwf	___aldiv@quotient+3,c
   708  00FD44  5005               	movf	___aldiv@divisor,w,c
   709  00FD46  1006               	iorwf	___aldiv@divisor+1,w,c
   710  00FD48  1007               	iorwf	___aldiv@divisor+2,w,c
   711  00FD4A  1008               	iorwf	___aldiv@divisor+3,w,c
   712  00FD4C  B4D8               	btfsc	status,2,c
   713  00FD4E  D02A               	goto	l138
   714  00FD50  0E01               	movlw	1
   715  00FD52  6E09               	movwf	___aldiv@counter,c
   716  00FD54  D006               	goto	l133
   717  00FD56  90D8               	bcf	status,0,c
   718  00FD58  3605               	rlcf	___aldiv@divisor,f,c
   719  00FD5A  3606               	rlcf	___aldiv@divisor+1,f,c
   720  00FD5C  3607               	rlcf	___aldiv@divisor+2,f,c
   721  00FD5E  3608               	rlcf	___aldiv@divisor+3,f,c
   722  00FD60  2A09               	incf	___aldiv@counter,f,c
   723  00FD62                     l133:
   724  00FD62  AE08               	btfss	___aldiv@divisor+3,7,c
   725  00FD64  D7F8               	goto	l134
   726  00FD66                     u190:
   727  00FD66  90D8               	bcf	status,0,c
   728  00FD68  360B               	rlcf	___aldiv@quotient,f,c
   729  00FD6A  360C               	rlcf	___aldiv@quotient+1,f,c
   730  00FD6C  360D               	rlcf	___aldiv@quotient+2,f,c
   731  00FD6E  360E               	rlcf	___aldiv@quotient+3,f,c
   732  00FD70  5005               	movf	___aldiv@divisor,w,c
   733  00FD72  5C01               	subwf	___aldiv@dividend,w,c
   734  00FD74  5006               	movf	___aldiv@divisor+1,w,c
   735  00FD76  5802               	subwfb	___aldiv@dividend+1,w,c
   736  00FD78  5007               	movf	___aldiv@divisor+2,w,c
   737  00FD7A  5803               	subwfb	___aldiv@dividend+2,w,c
   738  00FD7C  5008               	movf	___aldiv@divisor+3,w,c
   739  00FD7E  5804               	subwfb	___aldiv@dividend+3,w,c
   740  00FD80  A0D8               	btfss	status,0,c
   741  00FD82  D009               	goto	l137
   742  00FD84  5005               	movf	___aldiv@divisor,w,c
   743  00FD86  5E01               	subwf	___aldiv@dividend,f,c
   744  00FD88  5006               	movf	___aldiv@divisor+1,w,c
   745  00FD8A  5A02               	subwfb	___aldiv@dividend+1,f,c
   746  00FD8C  5007               	movf	___aldiv@divisor+2,w,c
   747  00FD8E  5A03               	subwfb	___aldiv@dividend+2,f,c
   748  00FD90  5008               	movf	___aldiv@divisor+3,w,c
   749  00FD92  5A04               	subwfb	___aldiv@dividend+3,f,c
   750  00FD94  800B               	bsf	___aldiv@quotient,0,c
   751  00FD96                     l137:
   752  00FD96  90D8               	bcf	status,0,c
   753  00FD98  3208               	rrcf	___aldiv@divisor+3,f,c
   754  00FD9A  3207               	rrcf	___aldiv@divisor+2,f,c
   755  00FD9C  3206               	rrcf	___aldiv@divisor+1,f,c
   756  00FD9E  3205               	rrcf	___aldiv@divisor,f,c
   757  00FDA0  2E09               	decfsz	___aldiv@counter,f,c
   758  00FDA2  D7E1               	goto	u190
   759  00FDA4                     l138:
   760  00FDA4  500A               	movf	___aldiv@sign,w,c
   761  00FDA6  B4D8               	btfsc	status,2,c
   762  00FDA8  D008               	goto	l139
   763  00FDAA  1E0E               	comf	___aldiv@quotient+3,f,c
   764  00FDAC  1E0D               	comf	___aldiv@quotient+2,f,c
   765  00FDAE  1E0C               	comf	___aldiv@quotient+1,f,c
   766  00FDB0  6C0B               	negf	___aldiv@quotient,c
   767  00FDB2  0E00               	movlw	0
   768  00FDB4  220C               	addwfc	___aldiv@quotient+1,f,c
   769  00FDB6  220D               	addwfc	___aldiv@quotient+2,f,c
   770  00FDB8  220E               	addwfc	___aldiv@quotient+3,f,c
   771  00FDBA                     l139:
   772  00FDBA  C00B  F001         	movff	___aldiv@quotient,?___aldiv
   773  00FDBE  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
   774  00FDC2  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
   775  00FDC6  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
   776  00FDCA  0012               	return	
   777  00FDCC                     __end_of___aldiv:
   778                           	opt stack 0
   779                           tblptru	equ	0xFF8
   780                           wreg	equ	0xFE8
   781                           status	equ	0xFD8
   782                           
   783 ;; *************** function _port_init *****************
   784 ;; Defined at:
   785 ;;		line 150 in file "main.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;		None
   790 ;; Return value:  Size  Location     Type
   791 ;;                  1    wreg      unsigned char 
   792 ;; Registers used:
   793 ;;		wreg, status,2
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   803 ;;Total ram usage:        0 bytes
   804 ;; Hardware stack levels used:    1
   805 ;; This function calls:
   806 ;;		Nothing
   807 ;; This function is called by:
   808 ;;		_system_init
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	text4
   813  00FC74                     __ptext4:
   814                           	opt stack 0
   815  00FC74                     _port_init:
   816                           	opt stack 29
   817                           
   818                           ;main.c: 152: TRISD = 0;
   819                           
   820                           ;incstack = 0
   821  00FC74  0E00               	movlw	0
   822  00FC76  6E95               	movwf	3989,c	;volatile
   823                           
   824                           ;main.c: 155: PORTD = 0;
   825  00FC78  0E00               	movlw	0
   826  00FC7A  6E83               	movwf	3971,c	;volatile
   827                           
   828                           ;main.c: 159: return 1;
   829  00FC7C  0E01               	movlw	1
   830  00FC7E  0012               	return	
   831  00FC80                     __end_of_port_init:
   832                           	opt stack 0
   833                           tblptru	equ	0xFF8
   834                           wreg	equ	0xFE8
   835                           status	equ	0xFD8
   836                           
   837 ;; *************** function _loop *****************
   838 ;; Defined at:
   839 ;;		line 212 in file "main.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;		None
   842 ;; Auto vars:     Size  Location     Type
   843 ;;  b               1    1[COMRAM] unsigned char 
   844 ;; Return value:  Size  Location     Type
   845 ;;                  1    wreg      void 
   846 ;; Registers used:
   847 ;;		wreg, status,2, cstack
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   856 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   857 ;;Total ram usage:        1 bytes
   858 ;; Hardware stack levels used:    1
   859 ;; Hardware stack levels required when called:    1
   860 ;; This function calls:
   861 ;;		_blink
   862 ;;		_uart_data_ready
   863 ;;		_uart_read
   864 ;; This function is called by:
   865 ;;		_main
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           	psect	text5
   870  00FC94                     __ptext5:
   871                           	opt stack 0
   872  00FC94                     _loop:
   873                           	opt stack 29
   874                           
   875                           ;main.c: 213: char b = 0;
   876                           
   877                           ;incstack = 0
   878  00FC94  0E00               	movlw	0
   879  00FC96  6E02               	movwf	loop@b,c
   880                           
   881                           ;main.c: 214: if (uart_data_ready()) {
   882  00FC98  EC2D  F07E         	call	_uart_data_ready	;wreg free
   883  00FC9C  0900               	iorlw	0
   884  00FC9E  B4D8               	btfsc	status,2,c
   885  00FCA0  0012               	return	
   886                           
   887                           ;main.c: 215: b = uart_read();
   888  00FCA2  EC31  F07E         	call	_uart_read	;wreg free
   889  00FCA6  6E02               	movwf	loop@b,c
   890                           
   891                           ;main.c: 221: blink();
   892  00FCA8  EC40  F07E         	call	_blink	;wreg free
   893  00FCAC  0012               	return	
   894  00FCAE                     __end_of_loop:
   895                           	opt stack 0
   896                           tblptru	equ	0xFF8
   897                           wreg	equ	0xFE8
   898                           status	equ	0xFD8
   899                           
   900 ;; *************** function _uart_read *****************
   901 ;; Defined at:
   902 ;;		line 134 in file "main.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;		None
   905 ;; Auto vars:     Size  Location     Type
   906 ;;		None
   907 ;; Return value:  Size  Location     Type
   908 ;;                  1    wreg      unsigned char 
   909 ;; Registers used:
   910 ;;		wreg, status,2
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   920 ;;Total ram usage:        0 bytes
   921 ;; Hardware stack levels used:    1
   922 ;; This function calls:
   923 ;;		Nothing
   924 ;; This function is called by:
   925 ;;		_loop
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	text6
   930  00FC62                     __ptext6:
   931                           	opt stack 0
   932  00FC62                     _uart_read:
   933                           	opt stack 29
   934                           
   935                           ;main.c: 135: while (!RCIF);
   936                           
   937                           ;incstack = 0
   938  00FC62  AA9E               	btfss	3998,5,c	;volatile
   939  00FC64  D7FE               	goto	_uart_read
   940                           
   941                           ;main.c: 136: return RCREG;
   942  00FC66  50AE               	movf	4014,w,c	;volatile
   943  00FC68  0012               	return	
   944  00FC6A                     __end_of_uart_read:
   945                           	opt stack 0
   946                           tblptru	equ	0xFF8
   947                           wreg	equ	0xFE8
   948                           status	equ	0xFD8
   949                           
   950 ;; *************** function _uart_data_ready *****************
   951 ;; Defined at:
   952 ;;		line 109 in file "main.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;		None
   955 ;; Auto vars:     Size  Location     Type
   956 ;;		None
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      unsigned char 
   959 ;; Registers used:
   960 ;;		wreg
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   970 ;;Total ram usage:        0 bytes
   971 ;; Hardware stack levels used:    1
   972 ;; This function calls:
   973 ;;		Nothing
   974 ;; This function is called by:
   975 ;;		_loop
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           	psect	text7
   980  00FC5A                     __ptext7:
   981                           	opt stack 0
   982  00FC5A                     _uart_data_ready:
   983                           	opt stack 29
   984                           
   985                           ;main.c: 110: return RCIF;
   986                           
   987                           ;incstack = 0
   988  00FC5A  0E00               	movlw	0
   989  00FC5C  BA9E               	btfsc	3998,5,c	;volatile
   990  00FC5E  0E01               	movlw	1
   991  00FC60  0012               	return	
   992  00FC62                     __end_of_uart_data_ready:
   993                           	opt stack 0
   994                           tblptru	equ	0xFF8
   995                           wreg	equ	0xFE8
   996                           status	equ	0xFD8
   997                           
   998 ;; *************** function _blink *****************
   999 ;; Defined at:
  1000 ;;		line 187 in file "main.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;		None
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;		None
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		wreg
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1018 ;;Total ram usage:        1 bytes
  1019 ;; Hardware stack levels used:    1
  1020 ;; This function calls:
  1021 ;;		Nothing
  1022 ;; This function is called by:
  1023 ;;		_loop
  1024 ;;		_error
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           	psect	text8
  1029  00FC80                     __ptext8:
  1030                           	opt stack 0
  1031  00FC80                     _blink:
  1032                           	opt stack 29
  1033                           
  1034                           ;main.c: 188: PORTDbits.RD1 = 1;
  1035                           
  1036                           ;incstack = 0
  1037  00FC80  8283               	bsf	3971,1,c	;volatile
  1038                           
  1039                           ;main.c: 189: _delay((unsigned long)((1)*(8000000/4000.0)));
  1040  00FC82  0E03               	movlw	3
  1041  00FC84  6E01               	movwf	??_blink& (0+255),c
  1042  00FC86  0E98               	movlw	152
  1043  00FC88                     u297:
  1044  00FC88  2EE8               	decfsz	wreg,f,c
  1045  00FC8A  D7FE               	bra	u297
  1046  00FC8C  2E01               	decfsz	??_blink& (0+255),f,c
  1047  00FC8E  D7FC               	bra	u297
  1048                           
  1049                           ;main.c: 190: PORTDbits.RD1 = 0;
  1050  00FC90  9283               	bcf	3971,1,c	;volatile
  1051  00FC92  0012               	return		;funcret
  1052  00FC94                     __end_of_blink:
  1053                           	opt stack 0
  1054                           tblptru	equ	0xFF8
  1055                           wreg	equ	0xFE8
  1056                           status	equ	0xFD8
  1057                           tblptru	equ	0xFF8
  1058                           wreg	equ	0xFE8
  1059                           status	equ	0xFD8
  1060                           
  1061                           	psect	rparam
  1062  0000                     tblptru	equ	0xFF8
  1063                           wreg	equ	0xFE8
  1064                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    256
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     37      37
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_system_init
    _system_init->_uart_init
    _uart_init->___aldiv
    _loop->_blink

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1016
                                             33 COMRAM     4     4      0
                               _loop
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          5     1      4     993
                                             28 COMRAM     5     1      4
                          _port_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (2) _uart_init                                           14    10      4     836
                                             14 COMRAM    14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loop                                                 1     1      0       0
                                              1 COMRAM     1     1      0
                              _blink
                    _uart_data_ready
                          _uart_read
 ---------------------------------------------------------------------------------
 (2) _uart_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _uart_data_ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _blink                                                1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _blink
     _uart_data_ready
     _uart_read
   _system_init
     _port_init
     _uart_init
       ___aldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     25      25       1       29.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
ABS                  0      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BIGRAM             F7F      0       0      37        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Jan 15 22:43:00 2018

                ??_uart_data_ready 0001                                 l31 FEE0  
                               l32 FEFA                                 l70 FCFA  
                      __CFG_OSC$HS 000000                __end_of_system_init FCD6  
                              l130 FD1C                                l131 FD34  
                              l133 FD62                                l134 FD56  
                              l137 FD96                                l138 FDA4  
                              l139 FDBA                                u225 FDDE  
                              u235 FE28                                u190 FD66  
                              u255 FE6A                                u265 FEB4  
                              u297 FC88                                wreg 000FE8  
                     __CFG_LVP$OFF 000000                       __CFG_WDT$OFF 000000  
                             _BRGH 007D62                               _CREN 007D5C  
                             _RCIF 007CF5                               _SPEN 007D5F  
                             _TXEN 007D65                               _SYNC 007D64  
                             _main FCD6                               _loop FC94  
                             start 0000                       ___param_bank 000000  
                  __end_of___aldiv FDCC                              ?_main 0001  
                            ?_loop 0001                     __CFG_DEBUG$OFF 000000  
                            _RCREG 000FAE                              _SPBRG 000FAF  
                            _PORTD 000F83                              _TRISD 000F95  
                    __CFG_PWRT$OFF 000000                              _blink FC80  
                   __CFG_BOREN$OFF 000000                              loop@b 0002  
                            status 000FD8                     __CFG_MCLRE$OFF 000000  
                  __initialization FC6A                        _system_init FCAE  
                     __end_of_main FD00                       __end_of_loop FCAE  
                           ??_main 0022                             ??_loop 0002  
                    __activetblptr 000002                             ?_blink 0001  
                           _TRISC6 007CA6                             _TRISC7 007CA7  
                        ??___aldiv 0009                       __mediumconst FEFE  
                           tblptru 000FF8                    _uart_data_ready FC5A  
                       __accesstop 0080            __end_of__initialization FC6A  
                  __CFG_PBADEN$OFF 000000                      ___rparam_used 000001  
                   __pcstackCOMRAM 0001                      __end_of_blink FC94  
              system_init@baudrate 001D                            ??_blink 0001  
               __size_of_uart_init 0132                 __size_of_uart_read 0008  
               __size_of_port_init 000C            __end_of_uart_data_ready FC62  
                          __Hparam 0000                            __Lparam 0000  
                     ?_system_init 001D                            ___aldiv FD00  
                          __pcinit FC6A                            __ramtop 1000  
                          __ptext0 FCD6                            __ptext1 FCAE  
                          __ptext2 FDCC                            __ptext3 FD00  
                          __ptext4 FC74                            __ptext5 FC94  
                          __ptext6 FC62                            __ptext7 FC5A  
                          __ptext8 FC80  __end_of_MIDI_NOTE_FREQUENCY_TABLE FFFF  
                 ___aldiv@dividend 0001               end_of_initialization FC6A  
                    __Lmediumconst FEFE                  __end_of_uart_init FEFE  
                __end_of_uart_read FC6A                  __end_of_port_init FC80  
                 ___aldiv@quotient 000B                          _PORTDbits 000F83  
               main@MIDI_BAUD_RATE 0022                   ?_uart_data_ready 0001  
              start_initialization FC6A               __size_of_system_init 0028  
                    __pmediumconst FEFE                           ?___aldiv 0001  
                   __size_of_blink 0014          _MIDI_NOTE_FREQUENCY_TABLE FEFF  
                  ___aldiv@divisor 0005                    ___aldiv@counter 0009  
                        _uart_init FDCC                          _uart_read FC62  
                       uart_init@x 001B                          _port_init FC74  
                         __Hrparam 0000                           __Lrparam 0000  
                       ?_uart_init 000F                         ?_uart_read 0001  
                 __size_of___aldiv 00CC                         ?_port_init 0001  
                system_init@status 0021                      __size_of_main 002A  
                    __size_of_loop 001A           __size_of_uart_data_ready 0008  
                uart_init@baudrate 000F                      ??_system_init 0021  
                      ??_uart_init 0013                        ??_uart_read 0001  
                      ??_port_init 0001                       ___aldiv@sign 000A  
